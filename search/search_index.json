{"config":{"lang":["en","es","de","fr","it","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"#welcome-to-beammp-docs","title":"Welcome to BeamMP Docs!","text":"<p>Welcome to the new and improved documentation hub for BeamMP! Whether you're a player, server owner, or developer, we have the resources you need to enhance your BeamNG.drive multiplayer experience.</p>"},{"location":"#for-players","title":"For Players","text":"<p>New to BeamMP? Check out our Getting Started page to help you hit the road running and make the most out of your multiplayer adventures.</p>"},{"location":"#for-server-owners","title":"For Server Owners","text":"<p>Thinking about creating your own BeamMP server? Our comprehensive guide here will walk you through the process, ensuring you have all the tools and knowledge to set up your server efficiently.</p>"},{"location":"#for-developers","title":"For Developers","text":"<p>Are you a modding enthusiast? Dive into the world of mod development for BeamNG.drive with our Modding Guide. Learn the fundamentals of Lua mod creation and explore how to make your mods multiplayer compatible for an even more immersive experience. Additionally, discover the ins and outs of creating resources for the BeamMP Server in our Resource Development Guide.</p> <p>Exciting updates are on the horizon, including a brand-new homepage designed to enhance your browsing experience. Stay tuned for more! </p>"},{"location":"contributing/","title":"Contributing to the BeamMP Docs","text":"<p>BeamMP is using Material for MkDocs as its theme. This is a theme for MkDocs. Full documentation can be found at their respective sites.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":"<p>To help contribute to these docs you can take one of two approaches as set out below:</p>"},{"location":"contributing/#1-edit-the-raw-markdown-files","title":"1. Edit the raw markdown files","text":"<p>Editing the raw markdown files is the fastest approach and best for quick edits such as spelling, grammar or new snippets of content.  This approach does require a prior knowledge of markdown however as you will need to understand what your contribution will produce.</p> <p>If this is the approach you wish to take then please follow these steps:</p> <ol> <li>Click edit on the page you wish to edit.</li> <li>Fork the project into your own GitHub account.</li> <li>Make the changes you see fit.</li> <li>Commit your changes to your fork.</li> <li>Raise a pull request against our repository here.</li> </ol> <p>Once you have created your pull request one of the BeamMP Mod Team will review your Pull Request and either approve it or request some changes. If changes were requested and you have completed them we will re-review your Pull Request. Then your changes will be merged into the repository and automatically deployed as part of our continuous integration.</p>"},{"location":"contributing/#2-make-edits-with-live-preview","title":"2. Make edits with live preview","text":"<p>Editing our docs this way will still take a similar approach as in option 1 however you will be able to preview your changes this way.</p> <ol> <li>Click edit on the page you wish to edit.</li> <li>Fork the project into your own GitHub account.</li> <li>Clone the project locally.</li> <li>Setup Material for MkDocs according to their guide here</li> <li>Run <code>mkdocs serve</code> to start the live-reloading docs server from where you cloned the fork to.</li> <li>Make the changes that you see fit.</li> <li>Commit your changes to your fork.</li> <li>Raise a pull request against our repository here.</li> </ol>"},{"location":"contributing/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"beamng/","title":"Welcome to the BeamNG.drive documentation","text":"<p>This documentation is unofficial and produced by the BeamMP Mod Team and the BeamNG Community.</p>"},{"location":"beamng/#understanding-the-file-structure","title":"Understanding The File Structure","text":"<p>...</p>"},{"location":"beamng/#snippets","title":"Snippets","text":"<p>Helpful code snippets can be found here: Snippets</p>"},{"location":"beamng/snippets/","title":"Helpful Code Snippets","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"beamng/snippets/#beamngdrive-snippets","title":"BeamNG.drive Snippets","text":""},{"location":"beamng/snippets/#lua-code-snippets","title":"Lua Code Snippets","text":""},{"location":"beamng/snippets/#drawing-a-marker-vehicle-detection","title":"Drawing a marker &amp; Vehicle detection","text":"<p>Drawing markers in the map can be one of the best ways to indicate to the user that there is some form of interaction that they can do there.</p> <p>Drawing a marker is fairly easy. Here is an example of how the bus route marker is drawn:</p> <pre><code>  local function createBusMarker(markerName)\n    local marker =  createObject('TSStatic')\n    marker:setField('shapeName', 0, \"art/shapes/interface/position_marker.dae\")\n    marker:setPosition(vec3(0, 0, 0))\n    marker.scale = vec3(1, 1, 1)\n    marker:setField('rotation', 0, '1 0 0 0')\n    marker.useInstanceRenderData = true\n    marker:setField('instanceColor', 0, '1 1 1 0')\n    marker:setField('collisionType', 0, \"Collision Mesh\")\n    marker:setField('decalType', 0, \"Collision Mesh\")\n    marker:setField('playAmbient', 0, \"1\")\n    marker:setField('allowPlayerStep', 0, \"1\")\n    marker:setField('canSave', 0, \"0\")\n    marker:setField('canSaveDynamicFields', 0, \"1\")\n    marker:setField('renderNormals', 0, \"0\")\n    marker:setField('meshCulling', 0, \"0\")\n    marker:setField('originSort', 0, \"0\")\n    marker:setField('forceDetail', 0, \"-1\")\n    marker.canSave = false\n    marker:registerObject(markerName)\n    scenetree.MissionGroup:addObject(marker)\n    return marker\n  end\n\n  -- this can then be called in a loop to setup your markers. \n  -- NOTE: You should only do this once as part of your setup and not called on each frame.\n  if #markers == 0 then\n    for k,v in pairs(nameMarkers) do\n      local mk = scenetree.findObject(v)\n      if mk == nil then\n        log('I', logTag,'Creating marker '..tostring(v))\n        mk = createBusMarker(v)\n        ScenarioObjectsGroup:addObject(mk.obj)\n      end\n      table.insert(markers, mk)\n    end\n  end\n</code></pre> <p>Here is a custom marker example from BeamNG-FuelStations:</p> <pre><code>  local stations = [\n    { \"location\": [ -778.813,  485.973, 23.46 ], \"type\":\"gas\" },\n    { \"location\": [  617.164, -192.107, 53.2  ], \"type\":\"ev\"  },\n  ]\n\n  local function IsEntityInsideArea(pos1, pos2, radius)\n    return pos1:distance(pos2) &lt; radius\n  end\n\n  local onUpdate = function (dt)\n    for k, spot in pairs(stations) do -- loop through all spots on the current map\n      local bottomPos = vec3(spot.location[1], spot.location[2], spot.location[3])\n      local topPos = bottomPos + vec3(0,0,2) -- offset vec to get top position (2m tall)\n\n      local spotInRange = false -- is this spot in range? used for color\n      local spotCompatible = false -- is this spot compatible?\n\n      if activeVeh then -- we have a car and its ours (if in mp)\n        local vehPos = activeVeh:getPosition()\n\n        spotInRange = IsEntityInsideArea(vec3(vehPos.x, vehPos.y,vehPos.z), bottomPos, 1.5)\n\n        spotCompatible = activeFuelType == \"any\" or spot.type == \"any\" or activeFuelType == spot.type\n      end\n\n      local spotColor = (spotInRange and spotCompatible) and activeColorMap[spot.type] or inactiveColorMap[spot.type] or ColorF(1,1,1,0.5)\n\n      debugDrawer:drawCylinder(bottomPos:toPoint3F(), topPos:toPoint3F(), 1, spotColor) --bottom, top, radius, color\n    end\n  end\n</code></pre>"},{"location":"beamng/snippets/#guihooks-examples","title":"guihooks examples","text":""},{"location":"beamng/snippets/#toast-notifications-top-right-of-screen","title":"Toast Notifications, Top right of screen","text":"<pre><code>--guihooks.trigger('toastrMsg', {type, title, msg, config = {timeOut}}) \nguihooks.trigger('toastrMsg', {type = \"info\", title = \"Info Message:\", msg = \"Info Message Text Here\", config = {timeOut = 5000}}) \nguihooks.trigger('toastrMsg', {type = \"warning\", title = \"Warning Message:\", msg = \"Warning Message Text Here\", config = {timeOut = 5000}}) \nguihooks.trigger('toastrMsg', {type = \"error\", title = \"Error Message:\", msg = \"Error Message Text Here\", config = {timeOut = 5000}}) \n</code></pre>"},{"location":"beamng/snippets/#message-notifications-top-left-of-screen-by-default-in-messages-app","title":"Message notifications, top left of screen by default in Messages app","text":"<pre><code>--guihooks.trigger('Message', {msg, ttl, category, icon}) --requires Messages app\nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"arrow_upward\", icon = \"arrow_upward\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"arrow_downward\", icon = \"arrow_downward\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"flag\", icon = \"flag\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"check\", icon = \"check\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"check_circle\", icon = \"check_circle\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"warning\", icon = \"warning\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"error\", icon = \"error\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"directions_car\", icon = \"directions_car\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"star\", icon = \"star\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"timeline\", icon = \"timeline\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"save\", icon = \"save\"}) \nguihooks.trigger('Message', {msg = \"Message Text Here\", ttl = 5.0, category = \"settings\", icon = \"settings\"}) \n</code></pre>"},{"location":"beamng/snippets/#center-large-or-small-display-flash","title":"Center large or small display flash","text":"<pre><code>--guihooks.trigger('ScenarioFlashMessage', {{msg, ttl, sound, big}} ) -- requires RaceCountdown ui app\nguihooks.trigger('ScenarioFlashMessage', {{\"Message\", 5.0, 0, true}} ) \nguihooks.trigger('ScenarioFlashMessage', {{\"Message Text Here\", 5.0, 0, false}} ) \n\n--countdown example, when all executed at once, the items are queued and will follow eachother after the previous ttl expires\nguihooks.trigger('ScenarioFlashMessage', {{\"3\", 1.0, \"Engine.Audio.playOnce('AudioGui', 'event:UI_Countdown1')\", true}}) \nguihooks.trigger('ScenarioFlashMessage', {{\"2\", 1.0, \"Engine.Audio.playOnce('AudioGui', 'event:UI_Countdown2')\", true}}) \nguihooks.trigger('ScenarioFlashMessage', {{\"1\", 1.0, \"Engine.Audio.playOnce('AudioGui', 'event:UI_Countdown3')\", true}}) \nguihooks.trigger('ScenarioFlashMessage', {{\"GO!\", 3.0, \"Engine.Audio.playOnce('AudioGui', 'event:UI_CountdownGo')\", true}}) \n\n--another sound example\nguihooks.trigger('ScenarioFlashMessage', {{\"Teleported!\", 3.0, \"Engine.Audio.playOnce('AudioGui', 'event:UI_Checkpoint')\", false}}) \n</code></pre>"},{"location":"beamng/snippets/#center-mid-size-persistent-display","title":"Center mid-size persistent display","text":"<p> <pre><code>--guihooks.trigger('ScenarioRealtimeDisplay', {msg = msg} ) -- requires Race Realtime Display ui app\nguihooks.trigger('ScenarioRealtimeDisplay', {msg = \"Message Text Here\"} )\n--these messages persist, clear with a blank string\n--if you are running live data, this is a good one to update rapidly (think timers, distance calcs, et cetera)\nguihooks.trigger('ScenarioRealtimeDisplay', {msg = \"\"} )\n</code></pre></p>"},{"location":"beamng/snippets/#imgui-code-snippets","title":"IMGUI Code Snippets","text":""},{"location":"beamng/snippets/#cef-ui-code-snippets","title":"CEF UI Code Snippets","text":""},{"location":"beamng/dev/","title":"Introduction","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"beamng/dev/#beamngdrive-development-introduction","title":"BeamNG.drive Development Introduction","text":""},{"location":"beamng/dev/content/maps/","title":"Maps","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"beamng/dev/content/maps/#beamngdrive-map-creation","title":"BeamNG.drive Map Creation","text":"<p>...</p>"},{"location":"beamng/dev/content/maps/#introduction","title":"Introduction","text":"<p>...</p>"},{"location":"beamng/dev/content/maps/#getting-started","title":"Getting Started","text":"<p>...</p>"},{"location":"beamng/dev/content/props/","title":"Props","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"beamng/dev/content/props/#beamngdrive-prop-creation","title":"BeamNG.drive Prop Creation","text":"<p>...</p>"},{"location":"beamng/dev/content/props/#introduction","title":"Introduction","text":"<p>...</p>"},{"location":"beamng/dev/content/props/#getting-started","title":"Getting Started","text":"<p>...</p>"},{"location":"beamng/dev/content/vehicles/","title":"Vehicles","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"beamng/dev/content/vehicles/#beamngdrive-vehicle-creation","title":"BeamNG.drive Vehicle Creation","text":"<p>...</p>"},{"location":"beamng/dev/content/vehicles/#introduction","title":"Introduction","text":"<p>...</p>"},{"location":"beamng/dev/content/vehicles/#getting-started","title":"Getting Started","text":"<p>...</p>"},{"location":"beamng/dev/modding/imgui-windows/","title":"imgui-windows.md","text":"<p>This page needs creating</p>"},{"location":"beamng/dev/modding/lua-mods/","title":"lua-mods.md","text":"<p>This page needs creating</p>"},{"location":"beamng/dev/modding/ui-apps/","title":"UI-App Creation","text":""},{"location":"game/getting-started/","title":"Getting Started","text":""},{"location":"game/getting-started/#before-getting-started","title":"Before getting started","text":"<p>BeamMP is only compatible with legitimate, Steam versions of the game. \"Cracked\" copies are not supported.</p>"},{"location":"game/getting-started/#windows-installation","title":"Windows Installation","text":"<ol> <li>Go to our Official Website and download the latest <code>BeamMP_Installer.zip</code> by clicking the green, \"Download Client\" button.</li> <li>Open the <code>BeamMP_Installer.zip</code> archive.</li> <li>Launch <code>BeamMP_Installer.exe</code> and follow the instructions.</li> <li>The BeamMP Launcher icon should appear on your desktop. If not, just search for \u201cBeamMP\u201d in the windows search bar. Afterwards you should see a little black window appear, shortly after BeamNG.drive should start. Remember to keep this console open while you are playing.</li> <li>Once BeamNG launches, press \u201cPlay\u201d. In the main menu you should see \u201cMultiplayer\u201d and from there you can play BeamMP.</li> <li>You will be prompted with a login pop-up, you can either play as a guest (not all servers will allow guests), or create an account on our Forum and then login to BeamMP with your credentials.</li> <li>Select any server you like, and press \u201cConnect\u201d. Enjoy!</li> </ol> <p>Just to note, as you are loading into a map with multiple vehicles spawned it might take longer than expected to join.</p>"},{"location":"game/getting-started/#known-issues","title":"Known Issues","text":"<p>If you don\u2019t see the \u201cMultiplayer\u201d button. Make sure that the BeamMP mod is activated in the \u201cMod Manager\u201d then try pressing CTRL + L.</p> <p>It's also important that BeamMP is the only mod activated in the \u201cMod Manager\u201d as otherwise this can cause issues.</p> <p>If you need further help with installation, you are welcome to create a post on our Forum or ask in the Official Discord </p>"},{"location":"game/getting-started/#linux-installation","title":"Linux Installation","text":"<p>BeamMP should work with <code>wine</code>, but is not officially supported (yet).</p>"},{"location":"game/playing/","title":"Playing BeamMP","text":"<p>This page is under construction!</p> <p>This page still needs to be created. Feel you could help? Please do!</p>"},{"location":"game/tailoring/","title":"Customizing your setup","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"game/tailoring/#customizing-your-beammp-installation","title":"Customizing your BeamMP Installation","text":""},{"location":"guides/","title":"Guides","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"guides/#beammp-development-guides","title":"BeamMP Development Guides","text":"<p>This page will be the introduction and preface for both client and server content creation.</p> <p>This page needs developing still.</p>"},{"location":"guides/mod-creation/client/getting-started/","title":"Client Mods","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"guides/mod-creation/client/getting-started/#getting-started","title":"Getting started","text":"<p>This page is going to take you through creating BeamMP mods for the game client.</p>"},{"location":"guides/mod-creation/server/getting-started/","title":"Server Resources","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"guides/mod-creation/server/getting-started/#getting-started","title":"Getting started","text":"<p>This page is going to take you through creating BeamMP resources for the server.</p>"},{"location":"scripting/mod-reference/","title":"Mod (In-Game)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"scripting/mod-reference/#modin-game-scripting-reference","title":"Mod/In-Game Scripting Reference","text":""},{"location":"scripting/server-reference/","title":"Server","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"scripting/server-reference/#server-scripting-reference","title":"Server Scripting Reference","text":""},{"location":"scripting/server-reference/#server-version-3x","title":"Server Version 3.X","text":""},{"location":"scripting/server-reference/#introduction","title":"Introduction","text":"<p>BeamMP-Server release v3.0.0 does some drastic changes to the way the Lua plugin system works. There is no way to use the old lua with a new server, so you'll have to migrate.</p> <p>The Server's Plugin system uses Lua 5.3. This section details how to get started writing plugins, teaches some basic concepts and gets you started with your first plugin. It is recommended you read this section even if you know the pre-v3.0.0 system, as a few things changed drastically.</p> <p>For a migration guide from pre-v3.0.0 lua, go to the section \"Migrating from old Lua\".</p>"},{"location":"scripting/server-reference/#directory-structure","title":"Directory Structure","text":"<p>Server plugins, unlike mods, are situated (by default) in <code>Resources/Server</code>, while mods, which are written for BeamNG.drive and are sent to the clients are in <code>Resources/Client</code>. Each plugin must have it's own subfolder in <code>Resources/Server</code>, for example for a plugin called \"MyPlugin\", the structure would be:</p> <pre><code>Resources\n\u2514\u2500\u2500 Server\n    \u251c\u2500\u2500 MyPlugin\n    \u2502   \u2514\u2500\u2500 main.lua\n    \u2514\u2500\u2500 SomeOtherPlugin\n        \u2514\u2500\u2500 ...\n</code></pre> <p>Here we also display another plugin called \"SomeOtherPlugin\", to illustrate how your <code>Resources/Server</code> folder can have multiple different plugin folders. We will keep using this directory structure as an example throughout this guide.</p> <p>You also notice the <code>main.lua</code>. You can have as many Lua <code>.lua</code> files as you like. All Lua files in your plugin's main directory are loaded in alphabetical order (so <code>aaa.lua</code> is run before <code>bbb.lua</code>).</p>"},{"location":"scripting/server-reference/#lua-files","title":"Lua Files","text":"<p>Each Lua <code>.lua</code> file in the plugin's folder is loaded on server startup. This means that statements outside of functions are evaluated (\"run\") immediately.</p> <p>Lua files in subfolders are ignored, but can be <code>require()</code>-ed.</p> <p>For example, our <code>main.lua</code> looks like this:</p> <pre><code>function PrintMyName()\n    print(\"I'm 'My Plugin'!\")\nend\n\nprint(\"What's up!\")\n</code></pre> <p>When the server starts and the <code>main.lua</code> is loaded, it will run <code>print(\"What's up!\")</code> immediately, but will NOT call the <code>PrintMyName</code> function yet (because it wasn't called)!</p>"},{"location":"scripting/server-reference/#events","title":"Events","text":"<p>An event is something like \"a player is joining\", \"a player sent a chat message\", \"a player spawned a vehicle\".</p> <p>You can cancel events (if they are cancellable) by returning <code>1</code> from the handler.</p> <p>In Lua, you usually want to react to some of these. For this, you can register a \"Handler\". This is a function which is called when an event happens, and gets passed some arguments.</p> <p>Example:</p> <pre><code>function MyChatMessageHandler(sender_id, sender_name, message)\n    -- censoring only the exact message 'darn'\n    if message == \"darn\" then\n        -- cancel the event by returning 1\n        return 1\n    else\n        return 0\n    end\nend\n\nMP.RegisterEvent(\"onChatMessage\", \"MyChatMessageHandler\")\n</code></pre> <p>This will effectively make sure that any message that is exactly equal to \"darn\" will not be sent and won't show in chat (note that for a real profanity filter you'd want to see if the message contains \"darn\", not is \"darn\"). Cancelling an event causes it to not happen, for example a chat message not to be shown to anyone else, a vehicle not to be spawned, etc.</p>"},{"location":"scripting/server-reference/#custom-events","title":"Custom Events","text":"<p>You can register to any event you like, for example:</p> <pre><code>MP.RegisterEvent(\"MyCoolCustomEvent\", \"MyHandler\")\n</code></pre> <p>You can then trigger those custom events:</p> <pre><code>-- call all event handlers to this in ALL plugins\nMP.TriggerGlobalEvent(\"MyCoolCustomEvent\")\n-- call all event handlers to this in THIS plugin\nMP.TriggerLocalEvent(\"MyCoolCustomEvent\")\n</code></pre> <p>You can do a lot more with events, but those possibilities will be covered in detail below in the API reference.</p>"},{"location":"scripting/server-reference/#event-timers-threads","title":"Event Timers (\"Threads\")","text":"<p>Pre-v3.0.0 Lua had a concept of \"threads\" which run X times per second. This naming was slightly misleading, as they were synchronous.</p> <p>v3.0.0 Lua instead has \"Event Timers\". These are timers which run inside the server, and once they run out, they trigger an event (globally). This is also synchronous. Please be aware that the second argument is an interval in milliseconds.</p> <p>Example:</p> <pre><code>local seconds = 0\n\nfunction CountSeconds()\n    seconds = seconds + 1\nend\n\n-- create a custom event called 'EverySecond'\n-- and register the handler function 'CountSeconds' to it\nMP.RegisterEvent(\"EverySecond\", \"CountSeconds\")\n\n-- create a timer for this event, which will fire every 1000ms (1s)\nMP.CreateEventTimer(\"EverySecond\", 1000)\n</code></pre> <p>This will cause \"CountSeconds\" to be called every second. You can also cancel event timers with <code>MP.CancelEventTimer</code> (see API reference).</p> <p>From the server's console, you can run <code>status</code> to see how many event timers are currently running, as well as info about event handlers that are waiting. This command will show more information in the future.</p>"},{"location":"scripting/server-reference/#debugging","title":"Debugging","text":"<p>Lua is difficult to debug. An industry-grade debugger like <code>gdb</code> sadly doesn't exist for embedded Lua.</p> <p>Generally, you can of course simple <code>print()</code> the values you want to inspect at any time. </p> <p>In v3.0.0, the server provides a way for you to inject an interpreter into a plugin and subsequently run Lua inside it in realtime. This is the closest we have to a debugger.</p> <p>Assuming you have the plugin from above which we called <code>MyPlugin</code>, you can enter into its Lua state like so:</p> <pre><code>&gt; lua MyPlugin\n</code></pre> <p>Capitalisation matters here, so be careful its entered correctly.  The output is something like <pre><code>lua @MyPlugin&gt; \n</code></pre> As you can see, we switched into the Lua state for <code>MyPlugin</code>. From now on until we enter <code>exit()</code> (as of v3.1.0 <code>:exit</code>), we will be in <code>MyPlugin</code> and can execute Lua there. </p> <p>For example, if we have a global called <code>MyValue</code>, we can print that value like so:</p> <pre><code>lua @MyPlugin&gt; print(MyValue)\n</code></pre> <p>You can call functions here and do anything you expect to be able to do.</p> <p>Since v3.1.0: You can press TAB to autocomplete functions and variables.</p> <p>WARNING: Sadly, if the Lua state is currently busy executing other code (like a <code>while</code> loop), this can fully hang the console until it finishes that work, so be very careful switching to states which may be waiting for something to happen.</p> <p>Additionally, you can run <code>status</code> in the regular console (<code>&gt;</code>), which will show you some statistics about Lua, among other things.</p>"},{"location":"scripting/server-reference/#custom-commands","title":"Custom Commands","text":"<p>In order to implement custom commands for the server console, the event <code>onConsoleInput</code> can be used.  This can be useful when you want to add a way for the server owner to signal something to your plugin, or to display internal state in a custom way.</p> <p>Here's an example:</p> <pre><code>function handleConsoleInput(cmd)\n    local delim = cmd:find(' ')\n    if delim then\n        local message = cmd:sub(delim+1)\n        if cmd:sub(1, delim-1) == \"print\" then\n            return message\n        end\n    end\nend\n\nMP.RegisterEvent(\"onConsoleInput\", \"handleConsoleInput\")\n</code></pre> <p>This will enable you to do the following in the server's console:</p> <pre><code>&gt; print hello, world\nhello, world\n</code></pre> <p>We implemented our own <code>print</code>. As an exercise, try to build a function like <code>say</code>, which sends a chat message to all players, or even a specific player (with <code>MP.SendChatMessage</code>).</p> <p>Caution: For your own plugins, it's generally recommended to \"namespace\" them. Our <code>print</code> example, in a plugin called <code>mystuff</code>, could be called <code>mystuff.print</code> or <code>ms.print</code> or similar.</p>"},{"location":"scripting/server-reference/#api-reference","title":"API Reference","text":"<p>Documentation format: <code>function_name(arg_name: arg_type, arg_name: arg_type) -&gt; return_types</code></p>"},{"location":"scripting/server-reference/#builtin-functions","title":"Builtin Functions","text":""},{"location":"scripting/server-reference/#print-printraw","title":"<code>print(...)</code>, <code>printRaw(...)</code>","text":"<p>Prints the message to the server console, prefixed with <code>[DATE TIME] [LUA]</code>. If you don't want this prefix, you can use <code>printRaw(...)</code>.</p> <p>Example:</p> <pre><code>local name = \"John Doe\"\nprint(\"Hello, I'm\", name, \"and I'm\", 32)\n</code></pre> <p>It can take as many arguments of arbitrary types as you like. It will also happily dump tables!</p> <p>This behaves like the lua interpreter's <code>print</code>, so it will put tabs between arguments.</p>"},{"location":"scripting/server-reference/#exit","title":"<code>exit()</code>","text":"<p>Shuts down the server gracefully. Causes the <code>onShutdown</code> event to be triggered.</p>"},{"location":"scripting/server-reference/#mp-functions","title":"MP Functions","text":""},{"location":"scripting/server-reference/#mpcreatetimer-timer","title":"<code>MP.CreateTimer() -&gt; Timer</code>","text":"<p>Creates a timer object, which can be used to keep track of how long something took / how much time elapsed. It starts once created, and can be reset/restarted with <code>mytimer:Start()</code>.</p> <p>You can get the current elapsed time in seconds with <code>mytimer:GetCurrent()</code>.</p> <p>Example:</p> <pre><code>local mytimer = MP.CreateTimer()\n-- do stuff here that needs to be timed\nprint(mytimer:GetCurrent()) -- print how much time elapsed\n</code></pre> <p>Timers do not need to be stopped (and can't be stopped), they have no overhead.</p>"},{"location":"scripting/server-reference/#mpgetosname-string","title":"<code>MP.GetOSName() -&gt; string</code>","text":"<p>Returns the name of the current OS, either <code>Windows</code>, <code>Linux</code> or <code>Other</code>.</p>"},{"location":"scripting/server-reference/#mpgetserverversion-numbernumbernumber","title":"<code>MP.GetServerVersion() -&gt; number,number,number</code>","text":"<p>Returns the current server version in major, minor, patch format. For example, the v3.0.0 version would return <code>3, 0, 0</code>.</p> <p>Example:</p> <p><pre><code>local major, minor, patch = MP.GetServerVersion()\nprint(major, minor, patch)\n</code></pre> Output: <pre><code>2   4   0\n</code></pre></p>"},{"location":"scripting/server-reference/#mpregistereventevent_name-string-function_name-string","title":"<code>MP.RegisterEvent(event_name: string, function_name: string)</code>","text":"<p>Remembers the function with name <code>Function Name</code> as an event handler to event with name <code>Event Name</code>.</p> <p>You can register as many handlers to an event as you like.</p> <p>For a list of events the server provides, see here.</p> <p>If the event with that name doesn't exist, it's created, and thus RegisterEvent cannot fail. This can be used to create custom events.</p>"},{"location":"scripting/server-reference/#mpcreateeventtimerevent_name-string-interval_ms-number-strategy-number-since-v302","title":"<code>MP.CreateEventTimer(event_name: string, interval_ms: number, [strategy: number (since v3.0.2)])</code>","text":"<p>Starts a timer inside the server which triggers the event <code>event_name</code> every <code>interval_ms</code> milliseconds.</p> <p>Event timers can be cancelled with <code>MP.CancelEventTimer</code>.</p> <p>Intervals &lt;25 ms are not encouraged, as multiple such intervals will likely not be served in time reliably. While multiple timers can be started on the same event, it's encouraged to create as few event timers as possible. For example, if you need one event that runs every half second, and one which runs every second, consider just making the half-second one and running the every-second-functiosecond trigger.</p> <p>You may also use <code>MP.CreateTimer</code> to make a timer and measure time passed since the last event call, in order to minimize event timers, though this is not necessarily recommended as it increases the code complexity significantly.</p> <p>Since 3.0.2:</p> <p>An optional <code>CallStrategy</code> may be supplied as the third argument. This can be either:</p> <ul> <li><code>MP.CallStrategy.BestEffort</code> (default): Will try to get your event to trigger at the specified interval, but will refuse to queue handlers if a handler takes too long.</li> <li><code>MP.CallStrategy.Precise</code>: Will enqueue event handlers at the exact interval specified. Can lead to the queue filling up if the handler takes longer than the interval. Only use if you NEED the exact interval.</li> </ul>"},{"location":"scripting/server-reference/#mpcanceleventtimerevent_name-string","title":"<code>MP.CancelEventTimer(event_name: string)</code>","text":"<p>Cancels all timers on the event with the name <code>event_name</code> On some occasions, the timer might go off one more time before being cancelled, due to the nature of asynchronous programming.</p>"},{"location":"scripting/server-reference/#mptriggerlocaleventevent_name-string-table","title":"<code>MP.TriggerLocalEvent(event_name: string, ...) -&gt; table</code>","text":"<p>Plugin-local synchronous event trigger.</p> <p>Triggers an event locally, which causes all handlers to that event in the current lua state (usually the current plugin, unless state was shared via PluginConfig.toml) to be called.</p> <p>You can pass arguments to this function (<code>...</code>) which are copied and sent to all handlers as function arguments.</p> <p>This call is synchronous and will return once all event handlers finished.</p> <p>The returned value is a table of all results. If a handler returned a value, it will be in this table, unannotated and unnamed. This can be used to \"collect\" things, or register sub-handlers for events that can be cancelled. This is practically an array.</p> <p>Example:</p> <pre><code>local Results = MP.TriggerLocalEvent(\"MyEvent\")\nprint(Results)\n</code></pre>"},{"location":"scripting/server-reference/#mptriggerglobaleventevent_name-string-table","title":"<code>MP.TriggerGlobalEvent(event_name: string, ...) -&gt; table</code>","text":"<p>Global asynchronous event trigger.</p> <p>Triggers an event globally, which causes all handlers to that event in all plugins (including this plugin) to be called.</p> <p>You can pass arguments to this function (<code>...</code>) which are copied and sent to all handlers as function arguments.</p> <p>This call is asynchronous and returns a future-like object. Local handlers (handlers in the same plugin as the caller) run synchronously and immediately. </p> <p>The table returned has two functions:</p> <ul> <li><code>IsDone() -&gt; boolean</code> tells you whether all handlers have finished. You can wait until this is true by checking it and <code>MP.Sleep</code>-ing for a little bit in a loop.</li> <li><code>GetResults() -&gt; table</code> returns an unannotated unnamed table with all return values of all handlers. This is practically an array.</li> </ul> <p>Make sure to call these with <code>Obj:Function()</code> syntax (<code>:</code>, NOT <code>.</code>).</p> <p>Example:</p> <pre><code>local Future = MP.TriggerGlobalEvent(\"MyEvent\")\n-- wait until handlers finished\nwhile not Future:IsDone() do\n    MP.Sleep(100) -- sleep 100 ms\nend\nlocal Results = Future:GetResults()\nprint(Results)\n</code></pre> <p>Be aware that a handler registering to \"MyEvent\" here and never returning could lock up your plugin. You likely want to keep track of how long you have waited and stop waiting after a few seconds.</p>"},{"location":"scripting/server-reference/#mpsleeptime_ms-number","title":"<code>MP.Sleep(time_ms: number)</code>","text":"<p>Waits for an amount of time, specified in milliseconds.</p> <p>This does not yield the execution of the lua state and nothing will execute in the state while asleep. </p> <p>WARNING: Do NOT sleep for &gt;500 ms if you have event handlers registered, unless you know exactly what you are doing. This is intended to be used to sleep for 1-100 ms, in order to wait for results or similar. A locked up (sleeping) lua state can slow the entire server down drastically if not careful.</p>"},{"location":"scripting/server-reference/#mpsendchatmessageplayer_id-number-message-string","title":"<code>MP.SendChatMessage(player_id: number, message: string)</code>","text":"<p>Sends a chat message that only the specified player can see (or everyone if the ID is <code>-1</code>). In the game, this will not appear as a directed message.</p> <p>You can use this, for example, to tell a player why you cancelled their vehicle spawn, chat message, or similar, or to display some information about your server.</p>"},{"location":"scripting/server-reference/#mptriggerclienteventplayer_id-number-event_name-string-data-string-boolean","title":"<code>MP.TriggerClientEvent(player_id: number, event_name: string, data: string) -&gt; boolean</code>","text":"<p>until v3.1.0</p>"},{"location":"scripting/server-reference/#mptriggerclienteventplayer_id-number-event_name-string-data-string-booleanstring","title":"<code>MP.TriggerClientEvent(player_id: number, event_name: string, data: string) -&gt; boolean,string</code>","text":"<p>since v3.1.0</p>"},{"location":"scripting/server-reference/#mptriggerclienteventjsonplayer_id-number-event_name-string-data-table-booleanstring","title":"<code>MP.TriggerClientEventJson(player_id: number, event_name: string, data: table) -&gt; boolean,string</code>","text":"<p>since v3.1.0</p> <p>Will call the given event with the given data on the specified client (-1 for broadcast). This event can then be handled in a clientside lua mod, see the \"Client Scripting\" documentation for this.</p> <p>Will return <code>true</code> if it was able to send the message (for <code>id = -1</code>, so broadcasts, its always <code>true</code>), and <code>false</code> if the player with that ID doesn't exist or is disconnected but still has an ID (this is a known issue).</p> <p>If <code>false</code> is returned, it makes no sense to retry this event, and a response (if any was expected) shouldn't be expected.</p> <p>Since v3.1.0, the second return value contains an error message if the function failed. Also since this version, the <code>*Json</code> version of the function takes a table as the data argument, and converts it to json. This is simply a shorthand for <code>MP.TriggerClientEvent(..., Util.JsonEncode(mytable))</code>.</p>"},{"location":"scripting/server-reference/#mpgetplayercount-number","title":"<code>MP.GetPlayerCount() -&gt; number</code>","text":"<p>Returns the amount of players currently in the server.</p>"},{"location":"scripting/server-reference/#mpgetpositionrawpid-number-vid-number-tablestring","title":"<code>MP.GetPositionRaw(pid: number, vid: number) -&gt; table,string</code>","text":"<p>Returns the current position of the vehicle <code>vid</code> (vehicle id) of player <code>pid</code> (player id), and an error string if an error occurred.</p> <p>The table is decoded from a position packet, so it has a variety of data (that's why this function is postfixed \"Raw\").</p> <p>TODO: Document fields. For now, users need to print() the result.</p>"},{"location":"scripting/server-reference/#mpisplayerconnectedplayer_id-number-boolean","title":"<code>MP.IsPlayerConnected(player_id: number) -&gt; boolean</code>","text":"<p>// TODO Documentation incomplete</p> <p>Whether the player is connected.</p>"},{"location":"scripting/server-reference/#mpgetplayernameplayer_id-number-string","title":"<code>MP.GetPlayerName(player_id: number) -&gt; string</code>","text":"<p>Gets the display-name of the player.</p>"},{"location":"scripting/server-reference/#mpremovevehicleplayer_id-number-vehicle_id-number","title":"<code>MP.RemoveVehicle(player_id: number, vehicle_id: number)</code>","text":"<p>Removes the specified vehicle for the specified player.</p>"},{"location":"scripting/server-reference/#mpgetplayervehiclesplayer_id-number-table","title":"<code>MP.GetPlayerVehicles(player_id: number) -&gt; table</code>","text":"<p>Returns a table of all vehicles the player currently has. Each entry in the table is a mapping from vehicle ID to vehicle data (which is currently a raw json string).</p>"},{"location":"scripting/server-reference/#mpgetplayers-table","title":"<code>MP.GetPlayers() -&gt; table</code>","text":"<p>Returns a table of all connected players. This table maps IDs to Names, like so: <pre><code>{\n    0: \"LionKor\",\n    1: \"JohnDoe\"\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#mpisplayerguestplayer_id-number-boolean","title":"<code>MP.IsPlayerGuest(player_id: number) -&gt; boolean</code>","text":"<p>Whether the player is a guest. A guest is someone who didn't log in, and instead chose to play as a guest. Their name is usually <code>guest</code> followed by a long number.</p> <p>As guests aren't logged in, you might want to disallow them from joining, for example when running a serious racing server or similar.</p>"},{"location":"scripting/server-reference/#mpdropplayerplayer_id-number-reason-string","title":"<code>MP.DropPlayer(player_id: number, [reason: string])</code>","text":"<p>Kicks the player with the specified ID. The reason parameter is optional.</p>"},{"location":"scripting/server-reference/#mpgetstatememoryusage-number","title":"<code>MP.GetStateMemoryUsage() -&gt; number</code>","text":"<p>Returns the memory usage of the current Lua state in bytes.</p>"},{"location":"scripting/server-reference/#mpgetluamemoryusage-number","title":"<code>MP.GetLuaMemoryUsage() -&gt; number</code>","text":"<p>Returns the memory usage of all lua states combined, in bytes.</p>"},{"location":"scripting/server-reference/#mpgetplayeridentifiersplayer_id-number-table","title":"<code>MP.GetPlayerIdentifiers(player_id: number) -&gt; table</code>","text":"<p>Returns a table with information about the player, such as beammp forum ID and IP address.</p> <p>Example:</p> <pre><code>{\n    ip: \"1.2.3.4\",\n    beammp: \"1234\"\n}\n</code></pre> <p>Until v3.1.0 the <code>ip</code> field is incorrect and will not work as intended. Fixed in v3.1.0.</p>"},{"location":"scripting/server-reference/#mpsetsetting-number","title":"<code>MP.Set(setting: number, ...)</code>","text":"<p>Sets a ServerConfig setting temporarily. For this, the <code>MP.Settings</code> table is useful.</p> <p>Example:</p> <p>Turning on Debug mode <pre><code>MP.Set(MP.Settings.Debug, true)\n</code></pre></p>"},{"location":"scripting/server-reference/#mpsettings","title":"<code>MP.Settings</code>","text":"<p>You can see an up-to-date list of these by printing them, like so: <pre><code>print(MP.Settings)\n</code></pre></p>"},{"location":"scripting/server-reference/#util-functions","title":"Util Functions","text":""},{"location":"scripting/server-reference/#utiljson","title":"<code>Util.Json*</code>","text":"<p>Since BeamMP-Server <code>v3.1.0</code>.</p> <p>This is a builtin JSON library, which is usually much faster than any Lua JSON library. Behind the scenes, C++'s <code>nlohmann::json</code> library is used, which is JSON compliant, full-coverage unit tested and continuously being fuzzed.</p>"},{"location":"scripting/server-reference/#utiljsonencodetable-table-string","title":"<code>Util.JsonEncode(table: table) -&gt; string</code>","text":"<p>Encodes a Lua table into a JSON string, recursively (tables inside tables inside tables ... work as expected). All primitive types are respected, functions, userdata and similar are ignored.</p> <p>The resulting JSON is minified and can be pretty-printed by using <code>Util.JsonPrettify</code> to prettify it.</p> <p>Example:  <pre><code>local player = {\n    name = \"Lion\",\n    age = 69,\n    skills = { \"skill A\", \"skill B\" }\n}\nlocal json = Util.JsonEncode(player)\n</code></pre></p> <p>Results in:  <pre><code>{\"name\":\"Lion\",\"age\":69,\"skills\":[\"skill A\",\"skill B\"]}\n</code></pre></p>"},{"location":"scripting/server-reference/#utiljsondecodejson-string-table","title":"<code>Util.JsonDecode(json: string) -&gt; table</code>","text":"<p>Decodes JSON into a Lua table. Will return <code>nil</code> if this failed, and print an error.</p> <p>Example: <pre><code>local json = \"{\\\"message\\\":\\\"OK\\\",\\\"code\\\":200}\"\nlocal tbl = Util.JsonDecode(json)\n</code></pre></p> <p>Results in: <pre><code>{\n    message = \"OK\",\n    code = 200,\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#utiljsonprettifyjson-string-string","title":"<code>Util.JsonPrettify(json: string) -&gt; string</code>","text":"<p>Add indentation and newlines to the json to make it more readable for humans.</p> <p>Example: <pre><code>local myjson = Util.JsonEncode({ name=\"Lion\", age = 69, skills = { \"skill A\", \"skill B\" } })\n\nprint(Util.JsonPrettify(myjson))\n</code></pre></p> <p>Results in: <pre><code>{\n    \"age\": 69.0,\n    \"name\": \"Lion\",\n    \"skills\": [\n        \"skill A\",\n        \"skill B\"\n    ]\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#utiljsonminifyjson-string-string","title":"<code>Util.JsonMinify(json: string) -&gt; string</code>","text":"<p>Removes indentation, newlines and any other whitespace. Not necessary unless you called <code>Util.JsonPrettify</code>, as all output from <code>Util.Json*</code> is already minified.</p> <p>Example: <pre><code>local pretty = Util.JsonPrettify(Util.JsonEncode({ name=\"Lion\", age = 69, skills = { \"skill A\", \"skill B\" } }))\n\nprint(Util.JsonMinify(pretty))\n</code></pre></p> <p>Results in: <pre><code>{\"age\":69.0,\"name\":\"Lion\",\"skills\":[\"skill A\",\"skill B\"]}\n</code></pre></p>"},{"location":"scripting/server-reference/#utiljsonflattenjson-string-string","title":"<code>Util.JsonFlatten(json: string) -&gt; string</code>","text":"<p>Creates a JSON object whose key are flattened to JSON pointers, according to RFC 6901. You can restore the original with <code>Util.JsonUnflatten()</code>. For this to work, all values need to be primitives.</p> <p>Example: <pre><code>local json = Util.JsonEncode({ name=\"Lion\", age = 69, skills = { \"skill A\", \"skill B\" } })\nprint(\"normal: \" ..json)\nprint(\"flattened: \" .. Util.JsonFlatten(json))\nprint(\"flattened pretty: \" .. Util.JsonPrettify(Util.JsonFlatten(json)))\n</code></pre></p> <p>Results in:  <pre><code>normal: {\"age\":69.0,\"name\":\"Lion\",\"skills\":[\"skill A\",\"skill B\"]}\nflattened: {\"/age\":69.0,\"/name\":\"Lion\",\"/skills/0\":\"skill A\",\"/skills/1\":\"skill B\"}\nflattened pretty: {\n    \"/age\": 69.0,\n    \"/name\": \"Lion\",\n    \"/skills/0\": \"skill A\",\n    \"/skills/1\": \"skill B\"\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#utiljsonunflattenjson-string-string","title":"<code>Util.JsonUnflatten(json: string) -&gt; string</code>","text":"<p>Restores the arbitrary nesting of a JSON value that has been flattened before using the <code>Util.JsonFlatten()</code> function. </p>"},{"location":"scripting/server-reference/#utiljsondiffa-string-b-string-string","title":"<code>Util.JsonDiff(a: string, b: string) -&gt; string</code>","text":"<p>Creates a JSON diff according to RFC 6902 (http://jsonpatch.com/). This diff can then be applied as a patch via <code>Util.JsonDiffApply()</code>. Returns the diff.</p>"},{"location":"scripting/server-reference/#utiljsondiffapplybase-string-diff-string-string","title":"<code>Util.JsonDiffApply(base: string, diff: string) -&gt; string</code>","text":"<p>Applies the JSON <code>diff</code> to <code>base</code> as a JSON patch (RFC 6902, http://jsonpatch.com/). Returns the result.</p>"},{"location":"scripting/server-reference/#utilrandom","title":"<code>Util.Random*</code>","text":"<p>Since BeamMP-Server <code>v3.1.0</code>.</p>"},{"location":"scripting/server-reference/#utilrandom-float","title":"<code>Util.Random() -&gt; float</code>","text":"<p>Returns a float between 0 and 1.</p> <p>Example: <pre><code>local rand = Util.Random()\nprint(\"rand: \" .. rand)\n</code></pre></p> <p>Results in:  <pre><code>rand: 0.135477\n</code></pre></p>"},{"location":"scripting/server-reference/#utilrandomintrangemin-int-max-int-int","title":"<code>Util.RandomIntRange(min: int, max: int) -&gt; int</code>","text":"<p>Returns an integer between min and max.</p> <p>Example: <pre><code>local randInt = Util.RandomIntRange(1, 100)\nprint(\"randInt: \" .. randInt)\n</code></pre></p> <p>Results in:  <pre><code>randInt:  69\n</code></pre></p>"},{"location":"scripting/server-reference/#utilrandomrangemin-number-max-number-float","title":"<code>Util.RandomRange(min: number, max: number) -&gt; float</code>","text":"<p>Returns a float between min and max.</p> <p>Example: <pre><code>local randFloat = Util.RandomRange(1, 1000)\nprint(\"randFloat: \" .. randFloat)\n</code></pre></p> <p>Results in:  <pre><code>randFloat: 420.6969\n</code></pre></p>"},{"location":"scripting/server-reference/#fs-functions","title":"FS Functions","text":"<p><code>FS</code> functions are filesystem functions, which aim to be better than the default Lua capabilities.</p> <p>Please always use <code>/</code> as a separator when specifying paths, as this is cross-platform (windows, linux, macos, ...).</p>"},{"location":"scripting/server-reference/#fscreatedirectorypath-string-boolstring","title":"<code>FS.CreateDirectory(path: string) -&gt; bool,string</code>","text":"<p>Creates the specified directory, and any parent directories if they don't exist. Behavior is roughly equivalent to the common linux command <code>mkdir -p</code>.</p> <p>Returns whether the operation had an error, and, if it did, an error message. This means that, if <code>true</code> is returned, an error occurred.</p> <p>Example: <pre><code>local error, error_message = FS.CreateDirectory(\"data/mystuff/somefolder\")\n\nif error then\n    print(\"failed to create directory: \" .. error_message)\nelse\n    -- do something with the directory\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#fsremovepath-string-boolstring","title":"<code>FS.Remove(path: string) -&gt; bool,string</code>","text":"<p>Removes the specified file or folder.</p> <p>Returns <code>true</code> if an error occured, with an error message in the second return value.</p> <p>Example: <pre><code>local error, error_message = FS.Remove(\"myfile.txt\")\n\nif error then\n    print(\"failed to delete myfile: \" .. error_message)\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#fsrenamepatha-string-pathb-string-boolstring","title":"<code>FS.Rename(pathA: string, pathB: string) -&gt; bool,string</code>","text":"<p>Renames (or moves) <code>pathA</code> to <code>pathB</code>.</p> <p>Returns <code>true</code> if an error occured, with an error message in the second return value.</p>"},{"location":"scripting/server-reference/#fscopypatha-string-pathb-string-boolstring","title":"<code>FS.Copy(pathA: string, pathB: string) -&gt; bool,string</code>","text":"<p>Copies <code>pathA</code> to <code>pathB</code>.</p> <p>Returns <code>true</code> if an error occured, with an error message in the second return value.</p>"},{"location":"scripting/server-reference/#fsgetfilenamepath-string-string","title":"<code>FS.GetFilename(path: string) -&gt; string</code>","text":"<p>Returns the last part of a path, which is usually the filename. Here are some example inputs + outputs:</p> <pre><code>input -&gt; output\n\n\"my/path/a.txt\"     -&gt; \"a.txt\"\n\"somefile.txt\"      -&gt; \"somefile.txt\"\n\"/awesome/path\"     -&gt; \"path\"\n</code></pre>"},{"location":"scripting/server-reference/#fsgetextensionpath-string-string","title":"<code>FS.GetExtension(path: string) -&gt; string</code>","text":"<p>Returns the extension of the file, or an empty string if no extension exists. Here are some example inputs + outputs</p> <pre><code>input -&gt; output\n\n\"myfile.txt\"                    -&gt; \".txt\"\n\"somefile.\"                     -&gt; \".\"\n\"/awesome/path\"                 -&gt; \"\"\n\"/awesome/path/file.zip.txt\"    -&gt; \".txt\"\n\"myexe.exe\"                     -&gt; \".exe\"\n</code></pre>"},{"location":"scripting/server-reference/#fsgetparentfolderpath-string-string","title":"<code>FS.GetParentFolder(path: string) -&gt; string</code>","text":"<p>Returns the path to the parent directory, i.e. the folder a file or folder is contained in. Here are some example inputs + outputs:</p> <pre><code>input -&gt; output\n\n\"/var/tmp/example.txt\"      -&gt; \"/var/tmp\"\n\"/\"                         -&gt; \"/\"\n\"mydir/a/b/c.txt\"           -&gt; \"mydir/a/b\"\n</code></pre>"},{"location":"scripting/server-reference/#fsexistspath-string-bool","title":"<code>FS.Exists(path: string) -&gt; bool</code>","text":"<p>Returns <code>true</code> if the path exists, <code>false</code> if it doesn't.</p>"},{"location":"scripting/server-reference/#fsisdirectorypath-string-bool","title":"<code>FS.IsDirectory(path: string) -&gt; bool</code>","text":"<p>Returns <code>true</code> if the specified path is a directory, <code>false</code> if it's not. Note that <code>false</code> does NOT imply that the path is a file (see <code>FS.IsFile()</code>).</p>"},{"location":"scripting/server-reference/#fsisfilepath-string-bool","title":"<code>FS.IsFile(path: string) -&gt; bool</code>","text":"<p>Returns <code>true</code> if the specified path is a regular file (not a symlink, hardlink, block device, etc.), <code>false</code> if it's not. Note taht <code>false</code> does NOT imply that the path is a directory (see <code>FS.IsDirectory()</code>).</p>"},{"location":"scripting/server-reference/#fslistdirectoriespath-string-table","title":"<code>FS.ListDirectories(path: string) -&gt; table</code>","text":"<p>Returns a table of all the directories in the given path.</p> <p>Example: <pre><code>print(FS.ListDirectories(\"Resources\"))\n</code></pre> Results in:  <pre><code>{\n    1: \"Client\",\n    2: \"Server\"\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#fslistfilespath-string-table","title":"<code>FS.ListFiles(path: string) -&gt; table</code>","text":"<p>Returns a table of all the files in the given path.</p> <p>Example: <pre><code>print(FS.ListFiles(\"Resources/Server/examplePlugin\"))\n</code></pre> Results in:  <pre><code>{\n    1: \"example.json\",\n    2: \"example.lua\"\n}\n</code></pre></p>"},{"location":"scripting/server-reference/#fsconcatpaths-string","title":"<code>FS.ConcatPaths(...) -&gt; string</code>","text":"<p>Adds together (concatenates) all arguments with the system's preferred path separator.</p> <p>Example: <pre><code>FS.ConcatPaths(\"a\", \"b\", \"/c/d/e/\", \"/f/\", \"g\", \"h.txt\")\n</code></pre> results in <pre><code>a/b/c/d/e/f/g/h.txt\n</code></pre></p> <p>Also resolves <code>..</code>, if that exists in the path at any point. This function is safer than concatenating strings in lua, and respects the platform's separators.</p> <p>Please always use <code>/</code> as a separator when specifying paths, as this is cross-platform (windows, linux, macos, ...).</p>"},{"location":"scripting/server-reference/#events_1","title":"Events","text":""},{"location":"scripting/server-reference/#explanation","title":"Explanation","text":"<ul> <li>Arguments: List of arguments given to handlers of this event</li> <li>Cancellable: Whether the event can be cancelled. If it can be cancelled, a handler can do so by returning <code>1</code>, like <code>return 1</code>.</li> </ul>"},{"location":"scripting/server-reference/#summary-of-events","title":"Summary of events","text":"<p>A player join triggers the following events in the given order:</p> <ol> <li><code>onPlayerAuth</code></li> <li><code>onPlayerConnecting</code></li> <li><code>onPlayerJoining</code></li> <li><code>onPlayerJoin</code></li> </ol>"},{"location":"scripting/server-reference/#system-events","title":"System Events","text":""},{"location":"scripting/server-reference/#oninit","title":"<code>onInit</code>","text":"<p>Arguments: NONE Cancellable: NO</p> <p>Triggered right after all files in the plugin were initialized.</p>"},{"location":"scripting/server-reference/#onshutdown","title":"<code>onShutdown</code>","text":"<p>Arguments: NONE Cancellable: NO</p> <p>Triggered when the server shuts down. Currently happens after all players were kicked.</p>"},{"location":"scripting/server-reference/#game-related-events","title":"Game-Related Events","text":""},{"location":"scripting/server-reference/#onplayerauth","title":"<code>onPlayerAuth</code>","text":"<p>Arguments: <code>player_name: string</code>, <code>player_role: string</code>, <code>is_guest: bool</code>, <code>identifiers: table -&gt; beammp, ip</code> Cancellable: YES</p> <p>First event that gets triggered when a player wants to join.</p>"},{"location":"scripting/server-reference/#onplayerconnecting","title":"<code>onPlayerConnecting</code>","text":"<p>Arguments: <code>player_id: number</code> Cancellable: NO</p> <p>Triggered when a player first starts connecting, after <code>onPlayerAuth</code>.</p>"},{"location":"scripting/server-reference/#onplayerjoining","title":"<code>onPlayerJoining</code>","text":"<p>Arguments: <code>player_id: number</code> Cancellable: NO</p> <p>Triggered when a player has finished loading all mods, after <code>onPlayerConnecting</code>.</p>"},{"location":"scripting/server-reference/#onplayerdisconnect","title":"<code>onPlayerDisconnect</code>","text":"<p>Arguments: <code>player_id: number</code> Cancellable: NO</p> <p>Triggered when a player disconnects.</p>"},{"location":"scripting/server-reference/#onchatmessage","title":"<code>onChatMessage</code>","text":"<p>Arguments: <code>player_id: number</code>, <code>player_name: string</code>, <code>message: string</code> Cancellable: YES</p> <p>Triggered when a player sends a chat message. When cancelled, it will not show the chat message to anyone, not even the player who sent it.</p>"},{"location":"scripting/server-reference/#onvehiclespawn","title":"<code>onVehicleSpawn</code>","text":"<p>Arguments: <code>player_id: number</code>, <code>vehicle_id: number</code>, <code>data: string</code> Cancellable: YES</p> <p>Triggered when a player spawns a new vehicle. The <code>data</code> argument contains the car's config as json. When cancelled, the car is not spawned.</p>"},{"location":"scripting/server-reference/#onvehicleedited","title":"<code>onVehicleEdited</code>","text":"<p>Arguments: <code>player_id: number</code>, <code>vehicle_id: number</code>, <code>data: string</code> Cancellable: YES</p> <p>Triggered when a player edits their vehicle and applies the edit. The <code>data</code> argument contains the car's change config as json. When cancelled, the edit is not applied.</p>"},{"location":"scripting/server-reference/#onvehicledeleted","title":"<code>onVehicleDeleted</code>","text":"<p>Lua, among other things.</p> <p>Custom Commands In order to implement custom commands for the server console, the event onConsoleInput can be used. This can be useful when you want to add a way for the server owner to signal something to your plugin, or to display internal state in a custom way.</p> <p>Here\u2019s an example:</p> <p>function handleConsoleInput(cmd)     local delim = cmd:find(' ')     if delim then         local message = cmd:sub(delim+1)         if cmd:sub(1, delim-1) == \"print\" then             return message         end     end end</p> <p>Arguments: <code>player_id: number</code>, <code>vehicle_id: number</code> Cancellable: NO</p> <p>Triggered when a player deletes their vehicle.</p>"},{"location":"scripting/server-reference/#onvehiclereset","title":"<code>onVehicleReset</code>","text":"<p>Arguments: <code>player_id: number</code>, <code>vehicle_id: number</code>, <code>data: string</code> Cancellable: NO</p> <p>Triggered when a player resets their vehicle. <code>data</code> is the car's data as json.</p>"},{"location":"scripting/server-reference/#onfilechanged","title":"<code>onFileChanged</code>","text":"<p>since v3.1.0</p> <p>Arguments: <code>path: string</code> Cancellable: NO</p> <p>Triggered if a file changes in the <code>Resources/Server</code> directory or any subdirectory of it. </p> <p>Any file change in the <code>Resources/Server/&lt;plugin&gt;</code> directory (not in a subfolder of it) will trigger a Lua state reload, and an <code>onFileChanged</code> event.</p> <p>Any file in subfolders of <code>Resources/Server/&lt;plugin&gt;</code>, such as <code>Resources/Server/&lt;plugin&gt;/lua/stuff.lua</code>, will not trigger a state reload and will only trigger an <code>onFileChanged</code> event. This way, you can reload it yourself in the correct way (or not reload it).</p> <p>This applies to all files, not just <code>.lua</code> files.</p> <p>The <code>path</code> is relative to the root of the server, for example <code>Resources/Server/myplugin/myfile.txt</code>. You can do further processing on this string with the <code>FS.*</code> family of functions, such as extracting the name or extension (<code>FS.GetExtension(...)</code>, <code>FS.GetFilename(...)</code>, ...).</p> <p>Note: Files added after the server is started are not tracked as of v3.1.0.</p>"},{"location":"scripting/server-reference/#migrating-from-old-lua","title":"Migrating from old Lua","text":"<p>This is a short run-down of the basic steps to take to migrate from old to new lua.</p>"},{"location":"scripting/server-reference/#understand-how-the-new-lua-works","title":"Understand how the new lua works","text":"<p>For this, please read through the section \"Introduction\" and all its subsections carefully. It's necessary to do the next steps properly.</p>"},{"location":"scripting/server-reference/#search-replace","title":"Search &amp; Replace","text":"<p>First, you should search and replace all MP functions. The substitution should add an <code>MP.</code> infront of all MP functions, except <code>print()</code>.</p> <p>Example:</p> <p><pre><code>local players = GetPlayers()\nprint(#players)\n</code></pre> becomes</p> <pre><code>local players = MP.GetPlayers()\nprint(#players) -- note how print() doesn't change\n</code></pre>"},{"location":"scripting/server-reference/#goodbye-threads-hello-event-timers","title":"Goodbye Threads, Hello Event Timers!","text":"<p>As discussed in the introduction, threads are event timers. For any calls to <code>CreateThread</code>, replace it with a call to <code>CreateEventTimer</code>. Carefully inspect the timing your old CreateThread had (the number was X per second), and think about what the event timer timeout value is for this (which is in milliseconds). Also keep in mind that instead of a function name, it takes an event name, so you will have to register an event as well.</p> <p>Example:</p> <p><pre><code>CreateThread(\"myFunction\", 2) -- calls \"myFunction\" twice per second\n</code></pre> becomes</p> <pre><code>MP.RegisterEvent(\"myEvent\", \"myFunction\") -- registering our event for the timer\nMP.CreateEventTimer(\"myEvent\", 500) -- 500 milliseconds = 2 times per second\n</code></pre> <p>If you have many event timers, it makes sense to see if you can combine them, e.g. by creating a \"every minute\" event and registering multiple functions to it which need to be called every minute, instead of having multiple event timers. Each event timer costs the server a little bit of time to trigger.</p>"},{"location":"scripting/server-reference/#no-more-implicit-event-calling","title":"No more implicit event calling","text":"<p>You need to register all your events. You cannot rely on function names. In the old lua, this was unclear, but in the new lua this is usually enforced. A good pattern is: </p> <pre><code>MP.RegisterEvent(\"onChatMessage\", \"chatMessageHandler\")\n-- or \nMP.RegisterEvent(\"onChatMessage\", \"handleChatMessage\")\n</code></pre> <p>This is a better pattern than calling the handler the same as the event, which is misleading and confusing.</p>"},{"location":"scripting/server-reference/#server-version-2x","title":"Server Version 2.X","text":"<p>This is 2.x scripting. Only refer to this if your server is old/outdated (version 2.x.x). For the reference for 3.x scripting and beyond, see this page on 3.x scripting.</p>"},{"location":"scripting/server-reference/#notes","title":"Notes","text":"<p>To get the output of a function in the server console you have to wrap it in a <code>print()</code> statement. For example: <code>print(GetPlayerName(0))</code> will return the name of your server's first player.</p> <p><code>&lt;PlayersServerID&gt;</code> starts at 0.</p>"},{"location":"scripting/server-reference/#list-of-available-functions-for-scripting","title":"List of available functions for scripting","text":""},{"location":"scripting/server-reference/#getplayernameplayersserverid","title":"GetPlayerName(playersServerID)","text":"<p>Returns the player's discord name as a string   <pre><code>function onPlayerJoin(playerID)\n  local name = GetPlayerName(playerID)\n  -- Do something\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#getplayerdiscordidplayersserverid","title":"GetPlayerDiscordID(playersServerID)","text":"<p>Returns the player's discord name as a string   <pre><code>function onPlayerJoin(playerID)\n  local name = GetPlayerDiscordID(playerID)\n  -- Do something\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#getplayerhwidplayersserverid","title":"GetPlayerHWID(playersServerID)","text":"<p>Returns the player's discord ID as a string   <pre><code>function onPlayerJoin(playerID)\n  local name = GetPlayerHWID(playerID)\n  -- Do something\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#getplayervehiclesplayersserverid","title":"GetPlayerVehicles(playersServerID)","text":"<p>Returns the player's vehicles as an object/array   <pre><code>function onChatMessage(playerID, senderName, message)\n  local vehicleList = GetPlayerVehicles(playerID)\n  for vehicleID, vehicleData in pairs(vehicleList) do\n      -- Do something\n    -- Could also be used to check how many vehicles a player have\n  end\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#dropplayerplayersserverid","title":"DropPlayer(playersServerID)","text":"<p>Drops the connection for a specific player. Essentially Kicking them   <pre><code>function onVehicleSpawn(playerID, vehicleID, vehicleData)\n  -- Do something \n  DropPlayer(playerID)\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#sendchatmessageplayersserverid-message","title":"SendChatMessage(playersServerID, message)","text":"<p>Sends a message over the network to the specified user. Use -1 for everyone   <pre><code>function onPlayerJoin(playerID)\n  SendChatMessage(-1, \"Someone just joined!\")\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#cancelevent-depreciated","title":"CancelEvent() -- DEPRECIATED","text":"<p>Cancels the event from happening. This might be going soon. Use <code>return 1</code> to cancel the event.</p>"},{"location":"scripting/server-reference/#oninit_1","title":"onInit()","text":"<p>If declared in a lua file, it will be called once C++ successfully finished loading the current lua file   <pre><code>function onInit()\n  print(\"Server ready\")\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#exit_1","title":"exit()","text":"<p>Will close the server   <pre><code>function onInit()\n  print(\"Server Ready. But who needs a server which is running\")\n  exit() -- Stops the server\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#createthreadfunctionname-callinterval","title":"CreateThread(functionName, callInterval)","text":"<p>Will execute the function on a dedicated thread and it will run callInterval times a second.  1 = It will run every second.</p> <pre><code>function yourFunction()\n  for i = 1,10 do\n      SendChatMessage(-1, \"Countdown: \"..i)\n      Sleep(1000)\n  end\nend\nCreateThread(\"yourFunction\", 30)\n</code></pre> <p>DEPRECIATED EXAMPLE Will execute the function on a dedicated thread   <pre><code>function yourFunction()\n  for i = 1,10 do\n      SendChatMessage(-1, \"Countdown: \"..i)\n      Sleep(1000)\n  end\nend\nCreateThread(\"yourFunction\", 30)\n</code></pre></p>"},{"location":"scripting/server-reference/#stopthreadfunctionname","title":"StopThread(functionName)","text":"<p>Will stop trying to call the thread function of the current script   <pre><code>function yourFunction()\n  delayExpired = false\n  Sleep(10000)\n  delayExpired = true\nend\nCreateThread(\"yourFunction\", 30)\n-- Do something\nif not delayExpired then\n  StopThread(\"yourFunction\")\nelse\n  -- Do something\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#sleepmillisecs-depreciated","title":"Sleep(millisecs) - DEPRECIATED","text":"<p>Will pause execution for the amount of time specified (warning doing so will pause the entire server if you didn't create a thread)   <pre><code>function countdown()\n  for i = 1,10 do\n      SendChatMessage(-1, \"Countdown: \"..i)\n      Sleep(1000)\n  end\nend\nCreateThread(\"countdown\", 10)\n</code></pre></p>"},{"location":"scripting/server-reference/#getplayercount","title":"GetPlayerCount()","text":"<p>Will return how many players are connected   <pre><code>function onPlayerJoin(playerID)\n  SendChatMessage(playerID, \"You are the \"..GetPlayerCount()..\"th player!\"\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#removevehicleplayerserverid-vehicleid","title":"RemoveVehicle(playerServerID, VehicleID)","text":"<p>Will despawn a vehicle   <pre><code>function onVehicleSpawn(playerID, vehicleID, vehicleData)\n  if --[[ Vehicle data equal something it shouldn't be ]] then\n      RemoveVehicle(playerID, vehicleIID)\n  end\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#getplayers","title":"GetPlayers()","text":"<p>Will return a table of IDs with Names   <pre><code>local function onPlayerJoin(joinedPlayerID)\n  local players = GetPlayers()\n  for playerID, playerName in pairs(players) do\n      if playerID == joinedPlayerID then\n          -- Do something\n      end\n  end\nend\n</code></pre></p>"},{"location":"scripting/server-reference/#registereventeventname-functionname","title":"RegisterEvent(eventName, functionName)","text":"<p>Will register that function to the event specified. Both must be strings   <pre><code>  function anyEvent()\n      -- Do something\n      end\n  RegisterEvent(\"onAnyEventHappen\", \"anyEvent\")\n  -- Do something\n  TriggerLocalEvent(\"onAnyEventHappen\")\n</code></pre></p>"},{"location":"scripting/server-reference/#triggerlocaleventeventname","title":"TriggerLocalEvent(eventName)","text":"<p>Will call every registered function in the same plugin folder.   <pre><code>  function anyEvent()\n      -- Do something\n      end\n  RegisterEvent(\"onAnyEventHappen\", \"anyEvent\")\n  -- Do something\n  TriggerLocalEvent(\"onAnyEventHappen\")\n</code></pre></p>"},{"location":"scripting/server-reference/#triggerglobaleventeventname","title":"TriggerGlobalEvent(eventName)","text":"<p>Will call every registered function with this event name.   <pre><code>  -- File A\n  function anyEvent()\n      -- Do something\n      end\n  RegisterEvent(\"onAnyEventHappen\", \"anyEvent\")\n</code></pre> <pre><code>      -- File B\n  TriggerGlobalEvent(\"onAnyEventHappen\")\n</code></pre></p>"},{"location":"scripting/server-reference/#triggerclienteventplayerserverid-eventname-data","title":"TriggerClientEvent(playerServerID, eventName, data)","text":"<p>Will call that event with the given data on the specified client (-1 for broadcast)   <pre><code>  function onPlayerJoin(playerServerID)\n     TriggerClientEvent(playerServerID, \"anyEvent\", \"You just joined the server\")\n  end\n  RegisterEvent(\"onAnyEventHappen\", \"anyEvent\")\n</code></pre></p>"},{"location":"scripting/server-reference/#setconfigid-newvalue","title":"Set(configID, newValue)","text":"<p>will set a config setting to the new specified value table below|   <pre><code>  function onChatMessage(playerID, senderName, message)\n    if playerID == adminPlayer then\n      if message == --[[ anything ]] then\n        Set(3, 10)\n      end\n    end\n  end\n</code></pre></p>"},{"location":"scripting/server-reference/#list-of-available-config-settings-for-the-set-command","title":"List of available config settings for the <code>Set()</code> command","text":"<p>Note that these will not save to the config file.</p> Config ID Name Will only accept <code>0</code> Debug setting true or false <code>1</code> Private setting true or false <code>2</code> Max car per player number <code>3</code> Max players number <code>4</code> Map string <code>5</code> Name string <code>6</code> Description string any other ID will result in a console warning"},{"location":"scripting/server-reference/#list-of-available-events-for-scripting","title":"List of available events for scripting","text":""},{"location":"scripting/server-reference/#default-events","title":"Default Events","text":"<p>Example of how to use an event: <pre><code>    function onInit()\n    RegisterEvent(\"onPlayerJoin\", \"onPlayerJoin\")\n  end\n\n  function onPlayerJoin(playerServerID)\n    -- Do something\n  end\n</code></pre></p> <p>If you dont want guests on your server: <pre><code>    function onInit()\n        print(\"noGuests Ready\")\n        RegisterEvent(\"onPlayerAuth\",\"onPlayerAuth\")\n    end\n\n    function onPlayerAuth(name, role, isGuest)\n        if isGuest then\n            return \"You must be signed in to join this server!\"\n        end\n    end\n</code></pre></p> Event Parameters Description <code>onPlayerAuth</code> The player's name, forum role, guest account (bool) A player has authenticated and is requesting to join <code>onPlayerConnecting</code> The player's ID A player is loading in (Before loading the map) <code>onPlayerJoining</code> The player's ID A player is loading the map and will be joined soon <code>onPlayerJoin</code> The player's ID A player has joined and loaded in <code>onPlayerDisconnect</code> The player's ID A player has disconnected <code>onChatMessage</code> The sender's ID, name, and the chat message A chat message was sent. This would be good for making a commands system <code>onVehicleSpawn</code> The player's ID, the vehicle ID, and the vehicle data This is called when someone spawns a vehicle <code>onVehicleEdited</code> The player's ID, the vehicle ID, and the vehicle data This is called when someone  edits a vehicle, or replaces their existing one <code>onVehicleDeleted</code> The player's ID and the vehicle ID This is called when someone deletes a vehicle they own"},{"location":"scripting/server-reference/#custom-events_1","title":"Custom Events","text":"<p>Custom events can also be created for your own use. This is done very much the same to how the default ones are done.</p> <p>Example of how to use a custom event: <pre><code>    function onInit()\n    RegisterEvent(\"myCustomEvent\", \"myCustomEvent\")\n  end\n\n  function myCustomEvent(playerServerID, customData)\n    -- Do something\n  end\n</code></pre></p> <p>This can then be called either from client side or serverside using the respective functions.</p>"},{"location":"scripting/server-reference/#players","title":"Players","text":"<p>When a player connects to your server, they are assigned a serverID starting from 0 and counting upwards. serverIDs are reused; if a player leaves and re-joins they will not be assigned a new serverID, they will simply get another available one. When the server restarts, serverIDs will be reset.</p>"},{"location":"scripting/server-reference/#static-identifiers","title":"Static Identifiers","text":"<p>Players in BeamMP have 3 static identifiers which can be obtained from their serverID being their name, discordID, and their hardwareID or HWID. (though the latter of the aforementioned isn't implemented, we will act as if it is) Each of the three ID types has their own origins and strength's/weaknesses to using them for player identification.</p> ID TYPE PROS CONS FUNCTION TO OBTAIN name easy to obtain, straightforward not secure GetPlayerName() discordID fairly secure inconvenient GetPlayerDiscordID() HWID extremely secure hard to obtain GetPlayerHWID()"},{"location":"scripting/server-reference/#vehicles","title":"Vehicles","text":"<p>Vehicles in beamMP have 3 attributes that the server pays attention to, the owner's serverID, the vehicles vehicleID and it's data. The Owner's serverID is straight forward, it is the serverID, every vehicle also has an ID, vehicle IDs are not unique to the vehicle; two vehicles may have the same ID, assuming they're from different owners. Unlike serverIDs, vehicleIDs are reused, for example, if I have 4 vehicles, their IDs are 0, 1, 2 and, 3 if I delete the vehicle in vehicleID 2, I will have 0, 1 and, 3, when I spawn a new vehicle, the new vehicle will slot into ID 2. Lastly, the last attribute vehicles have is data, data contains a vehicle, name, parts, and other data; as the name implies. data is stored as a raw JSON string, so you will need a JSON library alternatively, you can manually step through the string and dig out the information you need.</p>"},{"location":"server/create-a-server/","title":"Server Installation","text":""},{"location":"server/create-a-server/#creating-a-server","title":"Creating a Server","text":"<p>Basics of setting up the server application</p>"},{"location":"server/create-a-server/#overview","title":"Overview","text":"<p>Making a server for BeamMP is simple and free!</p> <p>Servers are an integral part of BeamMP; players are connected to each other through the server. They run natively on Windows and Linux.</p> <p>You can make private servers, which only people you invite can join, or public servers, which will show in our official server list.</p> <p>Getting a server up and running is a process with a few steps! It's quite easy, but if you run into any issues, feel free to ask on our Forum or on our Discord server in the <code>#server-support</code> channel. Also refer to the Server Maintenance section for more info.\u00a0</p> <p>Please make sure to read the LICENSE of the server before use.</p> <p>Note: The server only supports IPv4. If you don't know which one you have, look at the IP address you see on whatsmyip.org - if it contains <code>_:_</code> colons, it's IPv6. In that case, you should investigate further whether you also have an IPv4. You can call your ISP to find this out, or ask someone who lives with you (if they're tech-savvy, they might know!). IPv6 support is planned.</p>"},{"location":"server/create-a-server/#setting-up-the-server","title":"Setting up the Server","text":"<p>Setup consists of a few steps, you should follow all of them.</p>"},{"location":"server/create-a-server/#1-port-forwarding","title":"1. Port forwarding","text":"<p>If you are on a VPS (Virtual Private Server) or Rootserver, you can usually skip this step. If you're unsure about what a VPS or Rootserver is, you aren't on one.</p> <p>This step is necessary if you want someone outside of your household to join (\"outside of your local network\").</p> <p>This step is the same for almost every game's server, such as Minecraft Servers, so you can find many tutorials online for this, even for your specific router model. A good full guide is this tutorial. Make sure you forward port \u00a030814, as TCP and UDP.\u00a0</p> <p>While the default Port you want to \u201cforward\u201d is 30814, you can choose any other number &gt;1024, but you need to note down what you picked if it's not 30814. You need to forward both TCP and UDP.\u00a0</p> <p>If you have issues, also feel free to ask on our Forum or on our Discord server in the <code>#server-support</code> channel.</p>"},{"location":"server/create-a-server/#11-firewall","title":"1.1 Firewall","text":"<p>Depending on your setup, you may need to let BeamMP-Server through your firewall. This is the case on Windows (turning the firewall off does not work usually), and on a lot of preinstalled Linux servers.\u00a0</p> <p>There, just like with the port forwarding, you want to allow the BeamMP-Server through the firewall, both incoming and outgoing connections, and both TCP and UDP. If your firewall asks for a port instead, that will have to be the same port you used in step \u201c1. Port Forwarding\u201d (usually 30814).</p>"},{"location":"server/create-a-server/#2-obtaining-an-authentication-key","title":"2. Obtaining an Authentication Key","text":"<p>The \u201cAuthentication Key\u201d, often called \u201cAuthKey\u201d, is necessary for making a public server, but should be done for private servers, too.</p> <p>You will need a Discord account for this step. This is necessary to prevent spam.</p>"},{"location":"server/create-a-server/#21","title":"2.1.","text":"<p>To get your key, head to the Keymaster, click on \"Keys\u201d on the left (key symbol) and then click on the blue 'here' text.\u00a0</p> <p></p>"},{"location":"server/create-a-server/#22","title":"2.2.","text":"<p>Next, fill out the Server Name field (this is just the key name not the actual name of the server on the list). Example:</p> <p></p> <p>It should, in the end, look something like this:</p> <p></p> <p>Ignore the IP field as it doesn't do anything.</p> <p>DO NOT EVER SHARE THIS KEY OR SHOW IT TO ANYONE. TREAT THIS LIKE A PASSWORD.</p> <p>You have a limited number of keys. One key can be used on one server at a time, so you cannot start two servers at the same time with the same key.</p>"},{"location":"server/create-a-server/#23","title":"2.3.","text":"<p>Now copy the text in the \u201cKey\u201d field, in this example that is <code>3173a2e-6az0-4542-a3p0-ddqq5ff95558</code> and hold onto it for the next step.</p>"},{"location":"server/create-a-server/#3-installation","title":"3. Installation","text":"<p>The BeamMP-Server is available for Windows and Linux. The next two sections are dedicated to Windows and Linux each.\u00a0</p>"},{"location":"server/create-a-server/#3a-installation-on-windows","title":"3.a. Installation on Windows","text":"<p>For the Linux installation, see the next step.</p> <p>Please ensure you have port-forwarded before attempting to host a server! Without you ports being forwarded, you cannot host a server to the public!</p> <ol> <li>Download the server zip from beammp.com. You should end up with a compressed <code>.zip</code> archive, called something like <code>BeamMP-Server.zip</code>.</li> <li>Extract the <code>BeamMP-Server.zip</code>. You will end up with a <code>BeamMP-Server.exe</code> file, among others which you can ignore for now. Make a folder somewhere and put the <code>BeamMP-Server.exe</code> there. This is where your server will live.</li> <li>Start the server once by double-clicking on it. This will generate all the necessary files for you, once you see text you can close it and proceed to the next step. You should see a <code>Server.log</code> file and a <code>ServerConfig.toml</code> file next to your <code>BeamMP-Server.exe</code>.</li> <li>(optional) For quick access in the future you can easily create a desktop shortcut to <code>BeamMP-Server.exe</code> using [Right click] &gt; Send to &gt; Desktop (create shortcut).</li> </ol> <p>Now proceed to the next step.</p>"},{"location":"server/create-a-server/#3b-installation-on-linux","title":"3.b. Installation on Linux","text":"<p>Skip this if you did \u201cInstallation on Windows\u201d.</p>"},{"location":"server/create-a-server/#using-our-build-recommended","title":"Using our build (recommended)","text":"<p>This step will work on Debian, Ubuntu, and similar Debian-derivatives on x86_64. If you're on a different distribution or architecture, refer to the \"Building from source\u201d step below.</p> <ol> <li>Ensure you have the dependencies installed which are listed here.</li> <li>Download the server zip from beammp.com. You should end up with a compressed <code>.zip</code> archive, called something like <code>BeamMP-Server.zip</code>.</li> <li>Extract the <code>BeamMP-Server.zip</code>. You will end up with a <code>BeamMP-Server-linux</code> file, among others which you can ignore for now. Make a folder somewhere and put the <code>BeamMP-Server-linux</code> there. This is where your server will live.</li> <li>Open a terminal, go to that folder you put the <code>BeamMP-Server-linux</code> in, and run <code>chmod +x BeamMP-Server-linux</code>. This ensures that you have permissions to run it.</li> <li>Start the server once by running it with <code>./BeamMP-Server-linux</code>. This will generate all the necessary files for you, once you see text you can close it and proceed to the next step. You should see a <code>Server.log</code> file and a <code>ServerConfig.toml</code> file next to your <code>BeamMP-Server-linux</code>.</li> <li>(optional) It is heavily recommended to set up a user called <code>beammpserver</code> (or similar), as we do NOT recommend running the server as root, sudo or with your personal user account. You should then take steps to make sure that you start the server as this user only.</li> </ol> <p>Now proceed to the next step.</p>"},{"location":"server/create-a-server/#building-from-source","title":"Building from source","text":"<p>BeamMP-Server for Linux can be officially built on both Debian, Ubuntu, other Debian-derivatives, and ArchLinux. Other distributions are likely to work, too, but aren't officially supported. If you want to build it yourself you can do it by downloading the source on our GitHub, a tutorial can be found here.</p> <p>At the end, make sure to run your server once with <code>./BeamMP-Server</code> and then proceed to the next step.</p>"},{"location":"server/create-a-server/#4-configuration","title":"4. Configuration","text":"<p>Now that you ran the server once, it should have created some files and probably uttered an error or two. This is because we are not yet done. Your folder should have these files:</p> <p></p> <p>They might be called \u201cServerConfig\u201d, \u201cServer\u201d and \u201cBeamMP-Server\u201d (no extensions like \u201c.exe\u201d), but that's correct, too!</p> <p>Open the <code>ServerConfig.toml</code> with a text editor such as <code>Notepad</code>. You can do this with [Right Click] \u2192 \u201cOpen With\u2026\u201d and then selecting a text editor.</p> <p>You should see something like this: <pre><code>[General]\nAuthKey = ''\nDebug = false\nDescription = 'BeamMP Default Description'\nMap = '/levels/gridmap_v2/info.json'\nMaxCars = 1\nMaxPlayers = 10\nName = 'BeamMP Server'\nPort = 30814\nPrivate = false\nResourceFolder = 'Resources'\n</code></pre> This is your configuration file. It uses a format called TOML. Refer to the Server Maintenance section for more info on this file.</p> <p>For now, we only care about the <code>AuthKey</code> field. Between the quotes <code>''</code>, you want to paste in your AuthKey you copied in the first step.</p> <p>For our example key, it should then look like this: <pre><code>AuthKey = '3173a2e-6az0-4542-a3p0-ddqq5ff95558'\n</code></pre> Give your server a name, too, in the <code>Name</code> field. You can format this with colors and more, please refer to this section on Name customization in the server maintenance page.</p> <p>If you picked a different Port other than 30814, make sure to replace it here under <code>Port</code>.</p> <p>IMPORTANT: Your server will NOT show in the server list as long as <code>Private = True</code>. If you want it to show in the list, set that to <code>**Private = False**</code>.</p>"},{"location":"server/create-a-server/#5-validation","title":"5. Validation","text":"<p>Now run your server again, and see if it spits out any more <code>[ERROR]</code> messages. It should just stay open. At this point, you can start BeamMP through the BeamMP-Launcher and you should find your server by the Name you entered in the <code>ServerConfig.toml</code> in the server list.</p>"},{"location":"server/create-a-server/#how-to-add-mods-to-your-server","title":"How to add mods to your server","text":"<p>Vehicle mods and map mods are different to install, but both require you to put them in your server's (<code>Resources/Client</code>) folder. Simply slide any mod you want to add in that folder.\u00a0</p>"},{"location":"server/create-a-server/#general-mods","title":"General Mods","text":"<p>If you only wanted to add modded vehicles, you simply put the zip file of the mod in the <code>Resources/Client</code> folder. They will automatically be downloaded by anyone who joins your server.</p>"},{"location":"server/create-a-server/#maps","title":"Maps","text":"<p>All default maps (maps which aren't mods) work out-of-the-box and do not have to be installed. You simply change the <code>Map</code> setting in the <code>ServerConfig.toml</code> file to any of these. For any other modded maps, do this:</p> <ol> <li>Put your map's <code>.zip</code> file in your server's (<code>Resources/Client</code>) folder.</li> <li>Next, have a look inside the map's zip file (don't extract it) and open the <code>levels</code> folder. In this folder there should be simply one other folder with the name of the map, for example \u201cmyawesomedriftmap2021\u201d. Make sure to copy or remember this name exactly as it is written in that folder's name.</li> <li>Open your <code>ServerConfig.toml</code>. In the <code>Map</code> setting, you should see <code>/levels/MAPNAME/info.json</code>, where <code>MAPNAME</code> is likely something like <code>gridmap_v2</code>. You want to now replace this <code>MAPNAME</code> with the name of the folder from the last step, in that example it was <code>myawesomedriftmap2021</code>. In the end it should look like this (for this example) and should have <code>/info.json</code> at the end. <pre><code>Map = '/levels/myawesomedriftmap2021/info.json'\n</code></pre> Now, when someone joins your server, it should download the map automatically and work as expected.\u00a0</li> </ol> <p>If this does NOT work, install the map in your singleplayer BeamNG.drive, launch it and enter the map. Then, open the Console by pressing the <code>~</code> (tilde) key (if you're on a non-US keyboard, look at the Toggle System Console action in the Options &gt; Controls &gt; Bindings menu, under the General Debug section), and run <code>print(getMissionFilename())</code>. This should then show you the name to use.\u00a0</p> <p>That's it! Your modded map should now be available to join!</p>"},{"location":"server/create-a-server/#how-to-join-your-server","title":"How to join your server","text":"<p>How you and other people can join your server.</p>"},{"location":"server/create-a-server/#joining-your-own-server","title":"Joining your own server","text":"<p>You must join your server by direct connecting, to do this, click the Direct Connect Tab on the left from the server list. Leave the default info in there (should be 127.0.0.1 and a port of 30814) then hit connect.If you server is hosted outside of your house you must find your IP on that machine and direct connect that way.</p>"},{"location":"server/create-a-server/#other-people-joining-your-server-public","title":"Other people joining your server (Public)","text":"<p>For anyone else to join your server, it first must be port forwarded (A good guide here). To join your public server they can simply go to the server list, type the name of the server, and click connect. If you are unsure of what your server name is, it will be the name you put in the <code>ServerConfig.toml</code></p>"},{"location":"server/create-a-server/#other-people-joining-your-server-private","title":"Other people joining your server (Private)","text":"<p>For anyone else to join your server, it first must be port forwarded (A good guide here). To join your private server they must go to the Direct Connect Tab in BeamMP, then type your IP and Port. If you are unsure of your IP here's a good website. If you are unsure of your port the default is 30814, the port will be the same as the port you port forwarded.</p>"},{"location":"server/create-a-server/#other-people-joining-your-server-hamachi","title":"Other people joining your server (Hamachi)","text":"<p>For someone to join your server, they must be on your Hamachi network, you do not need to be port forwarded for this. After joining your Hamachi network they will use the Hamachi IP and default port to direct connect to your server. For more info see our Hamachi guide.</p>"},{"location":"server/manual/","title":"Server Manual","text":"<p>Server Name is limited to 250 characters Server Description is limited to 1000 characters Map is limited to 100 characters Tags is limited to 100 characters</p>"},{"location":"support/game-faq/","title":"F.A.Q. and Known Issues","text":"<p>List of commonly asked questions and known bugs.</p>"},{"location":"support/game-faq/#client","title":"Client","text":""},{"location":"support/game-faq/#how-do-i-install-beammp","title":"How do I install BeamMP?","text":"<p>There is a full guide on how to install BeamMP on Windows, you can find it here.</p>"},{"location":"support/game-faq/#does-beammp-work-on-a-cracked-version-of-beamng","title":"Does BeamMP work on a cracked version of BeamNG?","text":"<p>BeamMP does not work with cracked versions or outdated versions of BeamNG.drive. If you want to use BeamMP please consider buying the game.</p>"},{"location":"support/game-faq/#does-beammp-work-on-linux","title":"Does BeamMP work on linux?","text":"<p>The Client is not officially  supported on Linux. However, you might be able to get it working by running the launcher in the same proton prefix as the game.</p> <p>The Server builds can be found in the <code>BeamMP_Server.zip</code> download on the Official Website, or in the releases tab on the Github. For building instructions see here.</p>"},{"location":"support/game-faq/#why-is-the-launcher-flagged-by-my-antivirus-or-by-windows-defender","title":"Why is the launcher flagged by my antivirus or by Windows Defender","text":"<p>In order to prevent Windows Defender from flagging a specific .exe, we need to buy a license which is very expensivr, therefor, BeamMP might get flagged by Windows Defender</p> <p>Some antivirus may flag BeamMP as a virus  beacause it does some interactions with network and other stuff. There are no viruses in any of the code. The code for the launcher, server, and lua client can be seen on our GitHub.</p>"},{"location":"support/game-faq/#i-have-poor-performance-what-should-i-do","title":"I have poor performance, what should I do?","text":"<p>We are working hard to make performance as good as possible. Sadly, there isn't a lot you can do about it, if you have already lowered your graphic settings and your performance is still poor, consider playing on a server with less players. The game is mainly CPU bound when you play with lots of people, so older CPUs (even quadcores) will suffer with more than a handful of people.</p>"},{"location":"support/game-faq/#miscellaneous","title":"Miscellaneous","text":""},{"location":"support/game-faq/#where-can-i-find-the-code","title":"Where can I find the code?","text":"<p>All the source code can be found on our GitHub.</p> <p>Before doing anything keep in mind that the code is under Terms of Use </p>"},{"location":"support/game-faq/#i-have-found-a-bug-or-an-exploit-what-should-i-do","title":"I have found a bug or an exploit what should I do?","text":"<p>If the issue is code related and you know how to use Github, you can post the issue on our GitHub.</p> <p>If it is not something sensitive, you can create a post on our BeamMP Forum or you can report this on our Official Discord.</p> <p>If the information is sensitive you can directly report the issue to a Staff member on our Discord.</p>"},{"location":"support/server-faq/","title":"Server FAQ","text":"<p>List of commonly asked questions and known bugs.</p>"},{"location":"support/server-faq/#server","title":"Server","text":""},{"location":"support/server-faq/#how-can-i-setup-my-own-servers","title":"How can I setup my own servers","text":"<p>All the information to setup your own server can be found here.</p>"},{"location":"support/server-faq/#can-you-make-a-server-using-linux","title":"Can you make a server using linux?","text":"<p>BeamMP server can be built on Linux, however builds are not provided, you should build it yourself. It is officially supported on Debian 9 and Debian 10 a tutorial can be found Here.</p>"},{"location":"es/","title":"Inicio","text":"<p>\u00a1Este sitio est\u00e1 en construcci\u00f3n!</p> <p>Este sitio est\u00e1 siendo activamente trabajado en.</p> <p>\u00bfCrees que puedes ayudar? Por favor, hazlo haciendo clic en la p\u00e1gina con un l\u00e1piz a la derecha.</p> <p>Esto tambi\u00e9n se puede hacer en cualquier p\u00e1gina.</p>"},{"location":"es/#bienvenido-a-beammp-docs","title":"\u00a1Bienvenido a BeamMP Docs!","text":"<p>\u00a1Bienvenido al nuevo y mejorado centro de documentaci\u00f3n para BeamMP! Ya seas jugador, propietario de servidor o desarrollador, tenemos los recursos que necesitas para mejorar tu experiencia multijugador en BeamNG.drive.</p>"},{"location":"es/#para-jugadores","title":"Para Jugadores","text":"<p>\u00bfEres nuevo en BeamMP? Consulta nuestra Gu\u00eda de Inicio para ayudarte a empezar y sacar el m\u00e1ximo provecho de tus aventuras multijugador.</p>"},{"location":"es/#para-propietarios-de-servidor","title":"Para Propietarios de Servidor","text":"<p>\u00bfEst\u00e1s pensando en crear tu propio servidor BeamMP? Nuestra gu\u00eda completa aqu\u00ed te guiar\u00e1 en el proceso, asegur\u00e1ndote de tener todas las herramientas y conocimientos para configurar tu servidor de manera eficiente.</p>"},{"location":"es/#para-desarrolladores","title":"Para Desarrolladores","text":"<p>\u00bfEres un entusiasta del modding? Sum\u00e9rgete en el mundo del desarrollo de mods para BeamNG.drive con nuestra Gu\u00eda de Modding. Aprende los fundamentos de la creaci\u00f3n de mods Lua y descubre c\u00f3mo hacer que tus mods sean compatibles con multijugador para una experiencia a\u00fan m\u00e1s inmersiva. Adem\u00e1s, explora todos los detalles sobre c\u00f3mo crear recursos para el servidor de BeamMP en nuestra Gu\u00eda de Desarrollo de Recursos.</p> <p>Emocionantes actualizaciones est\u00e1n en camino, incluyendo una nueva p\u00e1gina de inicio dise\u00f1ada para mejorar tu experiencia de navegaci\u00f3n. \u00a1Mantente atento para m\u00e1s novedades! </p>"},{"location":"es/game/tailoring/","title":"Personaliza tu configuraci\u00f3n","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"es/scripting/mod-reference/","title":"Mod (En el Juego)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"es/scripting/server-reference/","title":"Servidor","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"de/","title":"Zuhause","text":"<p>Diese Seite befindet sich im Aufbau!</p> <p>Diese Seite wird aktiv bearbeitet.</p> <p>Denken Sie, Sie k\u00f6nnten helfen? Bitte tun Sie dies, indem Sie auf die Seite mit einem Bleistift rechts klicken!</p> <p>Dies kann auch auf jeder anderen Seite gemacht werden.</p>"},{"location":"de/#willkommen-bei-beammp-docs","title":"Willkommen bei BeamMP Docs!","text":"<p>Willkommen im neuen und verbesserten Dokumentationszentrum f\u00fcr BeamMP! Egal, ob du Spieler, Serverbesitzer oder Entwickler bist, wir haben die Ressourcen, die du ben\u00f6tigst, um dein Mehrspielererlebnis in BeamNG.drive zu optimieren.</p>"},{"location":"de/#fur-spieler","title":"F\u00fcr Spieler","text":"<p>Neu bei BeamMP? Schau dir unsere Einstiegshilfe an, um dir den Einstieg zu erleichtern und das Beste aus deinen Mehrspielerabenteuern herauszuholen.</p>"},{"location":"de/#fur-serverbesitzer","title":"F\u00fcr Serverbesitzer","text":"<p>Du m\u00f6chtest deinen eigenen BeamMP-Server erstellen? Unsere umfassende Anleitung hier f\u00fchrt dich durch den Prozess und stellt sicher, dass du alle notwendigen Werkzeuge und Kenntnisse f\u00fcr die effiziente Konfiguration deines Servers zur Verf\u00fcgung hast.</p>"},{"location":"de/#fur-entwickler","title":"F\u00fcr Entwickler","text":"<p>Bist du ein Modding-Enthusiast? Tauche ein in die Welt der Mod-Entwicklung f\u00fcr BeamNG.drive mit unserer Modding-Anleitung. Lerne die Grundlagen der Lua-Mod-Erstellung und entdecke, wie du deine Mods f\u00fcr den Mehrspielermodus kompatibel machst, f\u00fcr ein noch intensiveres Erlebnis. Erfahre au\u00dferdem alles Wissenswerte zur Erstellung von Ressourcen f\u00fcr den BeamMP-Server in unserer Anleitung zur Ressourcenentwicklung.</p> <p>Aufregende Updates stehen bevor, einschlie\u00dflich einer brandneuen Homepage, die entwickelt wurde, um dein Browsing-Erlebnis zu verbessern. Bleib dran f\u00fcr weitere Neuigkeiten! </p>"},{"location":"de/game/tailoring/","title":"Konfiguration anpassen","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"de/scripting/mod-reference/","title":"Mod (Im Spiel)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"fr/","title":"Accueil","text":"<p>Ce site est en construction !</p> <p>Ce site est actuellement en cours de travail.</p> <p>Pensez-vous pouvoir aider ? N'h\u00e9sitez pas en cliquant sur la page avec un crayon \u00e0 droite !</p> <p>Cela peut \u00e9galement \u00eatre fait sur n'importe quelle page.</p>"},{"location":"fr/#bienvenue-sur-beammp-docs","title":"Bienvenue sur BeamMP Docs !","text":"<p>Bienvenue sur le centre de documentation am\u00e9lior\u00e9 pour BeamMP ! Que vous soyez joueur, propri\u00e9taire de serveur ou d\u00e9veloppeur, nous avons les ressources dont vous avez besoin pour am\u00e9liorer votre exp\u00e9rience multijoueur sur BeamNG.drive.</p>"},{"location":"fr/#pour-les-joueurs","title":"Pour les Joueurs","text":"<p>Nouveau sur BeamMP ? Consultez notre Guide de D\u00e9marrage pour vous aider \u00e0 commencer et profiter au maximum de vos aventures multijoueurs.</p>"},{"location":"fr/#pour-les-proprietaires-de-serveur","title":"Pour les Propri\u00e9taires de Serveur","text":"<p>Vous envisagez de cr\u00e9er votre propre serveur BeamMP ? Notre guide complet ici vous guidera \u00e0 travers le processus, en veillant \u00e0 ce que vous disposiez de tous les outils et connaissances n\u00e9cessaires pour configurer votre serveur de mani\u00e8re efficace.</p>"},{"location":"fr/#pour-les-developpeurs","title":"Pour les D\u00e9veloppeurs","text":"<p>Vous \u00eates un passionn\u00e9 de modding ? Plongez dans l'univers du d\u00e9veloppement de mods pour BeamNG.drive avec notre Guide de Modding. Apprenez les bases de la cr\u00e9ation de mods Lua et d\u00e9couvrez comment rendre vos mods compatibles avec le multijoueur pour une exp\u00e9rience encore plus immersive. De plus, explorez tous les d\u00e9tails sur la cr\u00e9ation de ressources pour le serveur BeamMP dans notre Guide de D\u00e9veloppement de Ressources.</p> <p>D'excitantes mises \u00e0 jour sont \u00e0 venir, notamment une toute nouvelle page d'accueil con\u00e7ue pour am\u00e9liorer votre exp\u00e9rience de navigation. Restez \u00e0 l'\u00e9coute pour plus d'informations ! </p>"},{"location":"fr/game/tailoring/","title":"Personnalisation de votre configuration","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"fr/scripting/mod-reference/","title":"Mod (En jeu)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"fr/scripting/server-reference/","title":"Serveur","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"it/","title":"Home","text":"<p>Questo sito \u00e8 in costruzione!</p> <p>Questo sito \u00e8 attualmente in fase di lavorazione.</p> <p>Pensate di poter aiutare? Per favore, fatelo cliccando sulla pagina con una matita a destra!</p> <p>Questo pu\u00f2 essere fatto anche su qualsiasi altra pagina.</p>"},{"location":"it/#benvenuti-su-beammp-docs","title":"Benvenuti su BeamMP Docs!","text":"<p>Benvenuti nel centro documentazione rinnovato per BeamMP! Che tu sia un giocatore, un proprietario di server o uno sviluppatore, abbiamo le risorse di cui hai bisogno per migliorare la tua esperienza multiplayer su BeamNG.drive.</p>"},{"location":"it/#per-i-giocatori","title":"Per i Giocatori","text":"<p>Sei nuovo su BeamMP? Dai un'occhiata alla nostra Guida Introduttiva per aiutarti a iniziare e trarre il massimo dalle tue avventure multiplayer.</p>"},{"location":"it/#per-i-proprietari-di-server","title":"Per i Proprietari di Server","text":"<p>Stai pensando di creare il tuo server BeamMP? La nostra guida completa qui ti accompagner\u00e0 nel processo, assicurandoti di avere tutti gli strumenti e le conoscenze necessarie per configurare il tuo server in modo efficiente.</p>"},{"location":"it/#per-gli-sviluppatori","title":"Per gli Sviluppatori","text":"<p>Sei un appassionato di modding? Tuffati nel mondo dello sviluppo mod per BeamNG.drive con la nostra Guida al Modding. Impara i fondamenti della creazione di mod Lua e scopri come renderli compatibili con il multiplayer per un'esperienza ancora pi\u00f9 coinvolgente. Inoltre, esplora tutti i dettagli sulla creazione di risorse per il server BeamMP nella nostra Guida allo Sviluppo delle Risorse.</p> <p>Stiamo lavorando a entusiasmanti aggiornamenti, tra cui una nuova homepage progettata per migliorare la tua esperienza di navigazione. Resta sintonizzato per ulteriori novit\u00e0! </p>"},{"location":"it/game/tailoring/","title":"Personalizza la tua configurazione","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"it/scripting/mod-reference/","title":"Mod (In gioco)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"ru/","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f","text":"<p>\u042d\u0442\u043e\u0442 \u0441\u0430\u0439\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438!</p> <p>\u041d\u0430\u0434 \u044d\u0442\u0438\u043c \u0441\u0430\u0439\u0442\u043e\u043c \u0430\u043a\u0442\u0438\u0432\u043d\u043e \u0432\u0435\u0434\u0435\u0442\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430.</p> <p>\u0412\u044b \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0435, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043c\u043e\u0447\u044c? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043a\u0430\u0440\u0430\u043d\u0434\u0430\u0448\u043e\u043c \u0441\u043f\u0440\u0430\u0432\u0430!</p> <p>\u042d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.</p>"},{"location":"ru/#beammp-docs","title":"\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 BeamMP Docs!","text":"<p>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u043d\u043e\u0432\u044b\u0439 \u0438 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u044b\u0439 \u0446\u0435\u043d\u0442\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f BeamMP! \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e, \u044f\u0432\u043b\u044f\u0435\u0442\u0435\u0441\u044c \u043b\u0438 \u0432\u044b \u0438\u0433\u0440\u043e\u043a\u043e\u043c, \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0447\u0442\u043e\u0431\u044b \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0432\u0430\u0448 \u043e\u043f\u044b\u0442 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0438\u0433\u0440\u044b \u0432 BeamNG.drive.</p>"},{"location":"ru/#_1","title":"\u0414\u043b\u044f \u0418\u0433\u0440\u043e\u043a\u043e\u0432","text":"<p>\u041d\u043e\u0432\u0438\u0447\u043e\u043a \u0432 BeamMP? \u041e\u0437\u043d\u0430\u043a\u043e\u043c\u044c\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0448\u0438\u043c \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e\u043c \u043f\u043e \u041d\u0430\u0447\u0430\u043b\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0443\u0434\u043e\u0432\u043e\u043b\u044c\u0441\u0442\u0432\u0438\u044f \u043e\u0442 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043f\u0440\u0438\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439.</p>"},{"location":"ru/#_2","title":"\u0414\u043b\u044f \u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0421\u0435\u0440\u0432\u0435\u0440\u043e\u0432","text":"<p>\u0425\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 BeamMP? \u041d\u0430\u0448\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u0442 \u0432\u0430\u0441 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044f \u0432\u0430\u0441 \u0432\u0441\u0435\u043c\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</p>"},{"location":"ru/#_3","title":"\u0414\u043b\u044f \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432","text":"<p>\u0412\u044b \u0444\u0430\u043d\u0430\u0442 \u043c\u043e\u0434\u0434\u0438\u043d\u0433\u0430? \u041f\u043e\u0433\u0440\u0443\u0437\u0438\u0442\u0435\u0441\u044c \u0432 \u043c\u0438\u0440 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u043e\u0434\u043e\u0432 \u0434\u043b\u044f BeamNG.drive \u0441 \u043d\u0430\u0448\u0438\u043c \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e\u043c \u043f\u043e \u041c\u043e\u0434\u0434\u0438\u043d\u0433\u0443. \u0418\u0437\u0443\u0447\u0438\u0442\u0435 \u043e\u0441\u043d\u043e\u0432\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u043e\u0432 Lua \u0438 \u0443\u0437\u043d\u0430\u0439\u0442\u0435, \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043c\u043e\u0434\u044b \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438 \u0441 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0438\u0433\u0440\u043e\u0439 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0443\u0432\u043b\u0435\u043a\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043f\u044b\u0442\u0430. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u0443\u0437\u043d\u0430\u0439\u0442\u0435 \u0432\u0441\u0435 \u0442\u043e\u043d\u043a\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 BeamMP \u0432 \u043d\u0430\u0448\u0435\u043c \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435 \u043f\u043e \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0420\u0435\u0441\u0443\u0440\u0441\u043e\u0432.</p> <p>\u041c\u044b \u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u043b\u044f \u0432\u0430\u0441 \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043d\u043e\u0432\u0443\u044e \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043e\u043f\u044b\u0442\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430. \u0421\u043b\u0435\u0434\u0438\u0442\u0435 \u0437\u0430 \u043d\u043e\u0432\u043e\u0441\u0442\u044f\u043c\u0438! </p>"},{"location":"ru/game/tailoring/","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"ru/scripting/mod-reference/","title":"\u041c\u043e\u0434 (\u0432 \u0438\u0433\u0440\u0435)","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"},{"location":"ru/scripting/server-reference/","title":"\u0421\u0435\u0440\u0432\u0435\u0440","text":"<p>This site is under construction!</p> <p>This site is being actively worked on. </p> <p>Feel you could help? Please do by clicking on the page with a pencil on the right!</p> <p>This can be done any page too.</p>"}]}